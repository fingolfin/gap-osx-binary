<Section><Heading>The <K>HapLargeGroupResolutionRep</K> Representation</Heading>

  The large group representation has one additional component called
  <C>groupring</C>.
  Elements of the modules in a resolution are represented by lists of group
  ring elements. The length of the list corresponds to the dimension of the
  free module.
  <P/>
  
  All methods for the generic representation do also work for the large group
  representation. Some of them are wrappers for special methods which do only
  work for this representation.
  The following list only contains the methods which are not already present in
  the generic representation.
  <P/>
  Note that the input or the output of these functions does not comply
  with the standard representation.

<ManSection>
 <Meth Name="GroupRingOfResolution" Arg="resolution"/>
 <Returns>group ring</Returns>
  <Description>
   This returns the group ring of <A>resolution</A>. Note that by the way that
   group rings are handled in &GAP;, this is not equal to
   <C>GroupRing(R,GroupOfResolution(<A>resolution</A>))</C> where <C>R</C> is
   the ring of the resolution.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="MultiplyGroupElts_LargeGroupRep" Arg="resolution x y" />
 <Meth Name="MultiplyGroupEltsNC_LargeGroupRep" Arg="resolution x y"/>
 <Returns>group element</Returns>
  <Description>
   Returns the product of <A>x</A> and <A>y</A>. The NC version does not check
   whether  <A>x</A> and <A>y</A> are actually elements of the group of
   <A>resolution</A>.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="IsFreeZGLetterNoTermCheck_LargeGroupRep" Arg="resolution letter"/>
 <Returns>boolean</Returns>
  <Description>
   Returns <K>true</K> if <A>letter</A> has the form of a letter (a module
   element with exactly one non-zero entry which has exactly one non-zero
   coefficient) a module of <A>resolution</A> in the
   <K>HapLargeGroupResolution</K> representation. Note that it is not tested if
   <A>letter</A> actually is a letter in any term of <A>resolution</A>
  </Description>
</ManSection>


<ManSection>
 <Meth Name="IsFreeZGWordNoTermCheck_LargeGroupRep" Arg="resolution word"/>
 <Returns>boolean</Returns>
  <Description>
   Returns <K>true</K> if <A>word</A> has the form of a word of  a module of
   <A>resolution</A> in the <K>HapLargeGroupResolution</K> representation. Note
   that it is not tested if <A>word</A> actually is a word in any term of
   <A>resolution</A>.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="IsFreeZGLetter_LargeGroupRep" Arg="resolution term letter"/>
 <Returns>boolean</Returns>
  <Description>
   Returns <K>true</K> if and only if <A>letter</A> is a letter (a word of
   length 1) of the <A>term</A>th module of <A>resolution</A> in the
   <K>hapLargeGroupResolution</K> representation. I.e. it tests if
   <A>letter</A> is a module element with exactly one non-zero entry which has
   exactly one non-zero coefficient.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="IsFreeZGWord_LargeGroupRep" Arg="resolution term word"/>
 <Returns>boolean</Returns>
  <Description>
    Tests if <A>word</A> is an element of the <A>term</A>th module of
    <A>resoultion</A>.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="MultiplyFreeZGLetterWithGroupElt_LargeGroupRep" Arg="resolution
letter g"/>
 <Meth Name="MultiplyFreeZGLetterWithGroupEltNC_LargeGroupRep" Arg="resolution
letter g"/>
 <Returns>free ZG letter in large group representation</Returns>
  <Description>
   Multiplies the letter <A>letter</A> with the group element <A>g</A> and
   returns the result. The NC version does not check whether <A>g</A> is an
   element of the group of <A>resolution</A> and <A>letter</A> can be a letter.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="MultiplyFreeZGWordWithGroupElt_LargeGroupRep" Arg="resolution
word g"/>
 <Meth Name="MultiplyFreeZGWordWithGroupEltNC_LargeGroupRep" Arg="resolution
word g"/>
 <Returns>free ZG word in large group representation</Returns>
  <Description>
   Multiplies the word <A>word</A> with the group element <A>g</A> and
   returns the result. The NC version does not check whether <A>g</A> is an
   element of the group of <A>resolution</A> and <A>word</A> can be a word.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="GeneratorsOfModuleOfResolution_LargeGroupRep" Arg="resolution
term"/>
  <Returns>list of letters/words in large group representation</Returns>
  <Description>
   Returns a set of generators for the <A>term</A>th module of
   <A>resolution</A>. The returned value is a list of vectors of group ring
   elements. 
  </Description>
</ManSection>

<ManSection>
 <Meth Name="BoundaryOfGenerator_LargeGroupRep" Arg="resolution term n"/>
 <Meth Name="BoundaryOfGeneratorNC_LargeGroupRep" Arg="resolution term n"/>
 <Returns>free ZG word in the large group representation</Returns>
 <Description>
  Returns the boundary of the <A>n</A>th generator of the <A>term</A>th module
  of <A>resolution</A> as a word in the <A>n-1</A>st module (in large group
  representation). The NC version does not check whether there is a
  <A>term</A>th module and if it has at least <A>n</A> generators.
 </Description>
</ManSection>


<ManSection>
 <Meth Name="BoundaryOfFreeZGLetterNC_LargeGroupRep" Arg="resolution term
letter"/>
 <Meth Name="BoundaryOfFreeZGLetter_LargeGroupRep" Arg="resolution term letter"/>
 <Returns>free ZG word in large group representation</Returns>
  <Description>
   Calculates the boundary of the letter <A>letter</A> of the <A>term</A>th
   module of <A>resolution</A> in large group representation.
   The NC version does not check whether <A>letter</A> actually is a letter in
   the <A>term</A>th module.
  </Description>
</ManSection>


<ManSection>
 <Meth Name="BoundaryOfFreeZGWord_LargeGroupRep" Arg="resolution term word"/>
 <Returns>free ZG word in large group representation</Returns>
  <Description>
   Calculates the boundary of the element <A>word</A> of the <A>term</A>th
   module of <A>resolution</A> in large group representation.
   The NC version does not check whether <A>word</A> actually is a word in the
   <A>term</A>th module.
  </Description>
</ManSection>


</Section>
