<html><head><title>[loops] 7 Testing properties of quasigroups and loops</title></head>
<body text="#000000" bgcolor="#ffffff">
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP006.htm">Previous</a>] [<a href ="CHAP008.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<h1>7 Testing properties of quasigroups and loops</h1><p>
<P>
<H3>Sections</H3>
<oL>
<li> <A HREF="CHAP007.htm#SECT001">Associativity, commutativity and generalizations</a>
<li> <A HREF="CHAP007.htm#SECT002">Inverse properties</a>
<li> <A HREF="CHAP007.htm#SECT003">Some properties of quasigroups</a>
<li> <A HREF="CHAP007.htm#SECT004">Loops of Bol-Moufang type</a>
<li> <A HREF="CHAP007.htm#SECT005">Power alternative loops</a>
<li> <A HREF="CHAP007.htm#SECT006">Conjugacy closed loops and related properties</a>
<li> <A HREF="CHAP007.htm#SECT007">Additional varieties of loops</a>
</ol><p>
<p>
The reader should be aware that although loops are quasigroups, it is often the
case in the literature that a property named <i>P</i> can differ for quasigroups and
loops. For instance, a Steiner loop is not necessarily a Steiner quasigroup.
<p>
To avoid such ambivalences, we often include the noun <code>Loop</code> or <code>Quasigroup</code> as
part of the name of the property, e.g. <code>IsSteinerQuasigroup</code> versus
<code>IsSteinerLoop</code>.
<p>
On the other hand, some properties coincide for quasigroups and loops and we
therefore do not include <code>Loop</code>, <code>Quasigroup</code> as part of the name of the
property, e.g. <code>IsCommutative</code>.
<p>
<p>
<h2><a name="SECT001">7.1 Associativity, commutativity and generalizations</a></h2>
<p><p>
The following properties test if a quasigroup <i>Q</i> is associative and
commutative:
<p>
<a name = "SSEC001.1"></a>
<li><code>IsAssociative( </code><var>Q</var><code> ) P</code>
<a name = "SSEC001.1"></a>
<li><code>IsCommutative( </code><var>Q</var><code> ) P</code>
<p>
A loop <i>L</i> is said to be <var>power associative</var> (resp.
<var>diassociative</var>) if every
monogenic subloop of <i>L</i> (resp. every 2-generated subloop of <i>L</i>) is a group.
<p>
<a name = "SSEC001.2"></a>
<li><code>IsPowerAssociative( </code><var>L</var><code> ) P</code>
<a name = "SSEC001.2"></a>
<li><code>IsDiassociative( </code><var>L</var><code> ) P</code>
<p>
<p>
<h2><a name="SECT002">7.2 Inverse properties</a></h2>
<p><p>
A loop <i>L</i> has the <var>left inverse property</var> if
<i>x</i><sup>&#955;</sup>(<i>xy</i>)=<i>y</i> for every <i>x</i>, <i>y</i> &#8712; <i>L</i>, where <i>x</i><sup>&#955;</sup> is the left
inverse of <i>x</i>. Dually, <i>L</i> has the <var>right inverse property</var> if (<i>yx</i>)<i>x</i><sup>&#961;</sup>=<i>y</i> for every <i>x</i>, <i>y</i> &#8712; <i>L</i>, where <i>x</i><sup>&#961;</sup> is
the right inverse of <i>x</i>. If <i>L</i> has both the left and right inverse
properties, it has the <var>inverse property</var>. We say that
<i>L</i> has <var>two-sided inverses</var> if <i>x</i><sup>&#955;</sup>=<i>x</i><sup>&#961;</sup> for
every <i>x</i> &#8712; <i>L</i>.
<p>
<a name = "SSEC002.1"></a>
<li><code>HasLeftInverseProperty( </code><var>L</var><code> ) P</code>
<a name = "SSEC002.1"></a>
<li><code>HasRightInverseProperty( </code><var>L</var><code> ) P</code>
<a name = "SSEC002.1"></a>
<li><code>HasInverseProperty( </code><var>L</var><code> ) P</code>
<a name = "SSEC002.1"></a>
<li><code>HasTwosidedInverses( </code><var>L</var><code> ) P</code>
<p>
A loop has the <var>weak inverse property</var> if
(<i>xy</i>)<sup>&#955;</sup> <i>x</i> = <i>y</i><sup>&#955;</sup>. Equivalently, a loop has the weak inverse
property if <i>x</i>(<i>yx</i>)<sup>&#961;</sup> = <i>y</i><sup>&#961;</sup>.
<p>
<a name = "SSEC002.2"></a>
<li><code>HasWeakInverseProperty( </code><var>L</var><code> ) P</code>
<p>
According to <a href="biblio.htm#Ar"><cite>Ar</cite></a>, a loop <i>L</i> has the <var>automorphic inverse
property</var> if (<i>xy</i>)<sup>&#955;</sup> = <i>x</i><sup>&#955;</sup> <i>y</i><sup>&#955;</sup>, or, equivalently, (<i>xy</i>)<sup>&#961;</sup> = <i>x</i><sup>&#961;</sup> <i>y</i><sup>&#961;</sup>. (In particular, when
<i>L</i> has two-sided inverses and the automorphic inverse property, it satisfies
(<i>xy</i>)<sup>&#8722;1</sup>=<i>x</i><sup>&#8722;1</sup><i>y</i><sup>&#8722;1</sup>.) Similarly, <i>L</i> has the <var>antiautomorphic inverse
property</var> if (<i>xy</i>)<sup>&#955;</sup>=<i>y</i><sup>&#955;</sup> <i>x</i><sup>&#955;</sup>, or, equivalently, (<i>xy</i>)<sup>&#961;</sup> = <i>y</i><sup>&#961;</sup> <i>x</i><sup>&#961;</sup>.
<p>
<a name = "SSEC002.3"></a>
<li><code>HasAutomorphicInverseProperty( </code><var>L</var><code> ) P</code>
<a name = "SSEC002.3"></a>
<li><code>HasAntiautomorphicInverseProperty( </code><var>L</var><code> ) P</code>
<p>
The following implications among inverse properties hold and are
implemented in <font face="Gill Sans,Helvetica,Arial">LOOPS</font>:
<ul>
<li>
    Inverse property implies left and right inverse properties,
    two-sided inverses, weak inverse property, and antiautomorphic
    inverse property.
<li>
    Antiautomorphic inverse property loops have two-sided inverses.
<li>
    If a loop has any two of the left inverse property, right inverse property,
    weak inverse property or antiautomorphic inverse property, it also has
    the inverse property.
</ul>
<p>
<p>
<h2><a name="SECT003">7.3 Some properties of quasigroups</a></h2>
<p><p>
A quasigroup <i>Q</i> is <var>semisymmetric</var> if (<i>xy</i>)<i>x</i>=<i>y</i> for every <i>x</i>, <i>y</i> &#8712;  <i>Q</i>. Equivalently, <i>Q</i> is semisymmetric if <i>x</i>(<i>yx</i>)=<i>y</i> for every <i>x</i>, <i>y</i> &#8712; <i>Q</i>. A
semisymmetric commutative quasigroup is known as <var>totally
symmetric</var>. Totally symmetric quasigroups are precisely quasigroups satisfying
<i>xy</i>=<i>x</i>\<i>y</i> = <i>x</i>/<i>y</i>.
<p>
<a name = "SSEC003.1"></a>
<li><code>IsSemisymmetric( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.1"></a>
<li><code>IsTotallySymmetric( </code><var>Q</var><code> ) P</code>
<p>
A quasigroup <i>Q</i> is <var>idempotent</var> if <i>x</i><sup>2</sup>=<i>x</i> for every <i>x</i> &#8712; <i>Q</i>.
Idempotent totally symmetric quasigroups are known as <var>Steiner
quasigroups</var>. A quasigroup
<i>Q</i> is <var>unipotent</var> if
<i>x</i><sup>2</sup>=<i>y</i><sup>2</sup> for every <i>x</i>, <i>y</i> &#8712; <i>Q</i>.
<p>
<a name = "SSEC003.2"></a>
<li><code>IsIdempotent( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.2"></a>
<li><code>IsSteinerQuasigroup( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.2"></a>
<li><code>IsUnipotent( </code><var>Q</var><code> ) P</code>
<p>
A quasigroup is <var>left distributive</var> if it
satisfies <i>x</i>(<i>yz</i>)=(<i>xy</i>)(<i>xz</i>). Similarly, it is <var>right
distributive</var> if it satisfies
(<i>xy</i>)<i>z</i>=(<i>xz</i>)(<i>yz</i>). A <var>distributive quasigroup</var> is a quasigroup that is both left
and right distributive. A quasigroup is called <var>entropic</var> or <var>medial</var> if it satisfies (<i>xy</i>)(<i>zw</i>)=(<i>xz</i>)(<i>yw</i>).
<p>
<a name = "SSEC003.3"></a>
<li><code>IsLeftDistributive( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.3"></a>
<li><code>IsRightDistributive( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.3"></a>
<li><code>IsDistributive( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.3"></a>
<li><code>IsEntropic( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.3"></a>
<li><code>IsMedial( </code><var>Q</var><code> ) P</code>
<p>
In order to be compatible with <font face="Gill Sans,Helvetica,Arial">GAP</font>'s terminology, we also support the synonyms
<p>
<a name = "SSEC003.4"></a>
<li><code>IsLDistributive( </code><var>Q</var><code> ) P</code>
<a name = "SSEC003.4"></a>
<li><code>IsRDistributive( </code><var>Q</var><code> ) P</code>
<p>
for <code>IsLeftDistributive</code> and <code>IsRightDistributive</code> respectively.
<p>
<p>
<h2><a name="SECT004">7.4 Loops of Bol-Moufang type</a></h2>
<p><p>
Following <a href="biblio.htm#Fe"><cite>Fe</cite></a> and <a href="biblio.htm#PhVo"><cite>PhVo</cite></a>, a variety of loops is said to be of
<var>Bol-Moufang type</var> if it is defined by a single
<var>identity of Bol-Moufang type</var>, i.e., by an
identity that:
<ul>
<li>
    contains the same 3 variables on both sides,
<li>
     exactly one of the variables occurs twice on both sides,
<li>
     the variables occur in the same order on both sides.
</ul>
It is proved in <a href="biblio.htm#PhVo"><cite>PhVo</cite></a> that there are 13 varieties of nonassociative loops
of Bol-Moufang type. These are:
<ul>
<li>
    <var>left alternative loops</var>, defined by <i>x</i>(<i>xy</i>) = (<i>xx</i>)<i>y</i>,
<li>
    <var>right alternative loops</var>, defined by <i>x</i>(<i>yy</i>) = (<i>xy</i>)<i>y</i>,
<li>
    <var>left nuclear square loops</var>, defined by (<i>xx</i>)(<i>yz</i>) = ((<i>xx</i>)<i>y</i>)<i>z</i>,
<li>
    <var>middle nuclear square loops</var>, defined by <i>x</i>((<i>yy</i>)<i>z</i>) = (<i>x</i>(<i>yy</i>))<i>z</i>,
<li>
    <var>right nuclear square loops</var>, defined by <i>x</i>(<i>y</i>(<i>zz</i>)) = (<i>xy</i>)(<i>zz</i>),
<li>
    <var>flexible loops</var>, defined by <i>x</i>(<i>yx</i>) = (<i>xy</i>)<i>x</i>,
<li>
    <var>left Bol loops</var>, defined by <i>x</i>(<i>y</i>(<i>xz</i>)) = (<i>x</i>(<i>yx</i>))<i>z</i>,
    always left alternative,
<li>
    <var>right Bol loops</var>, defined by <i>x</i>((<i>yz</i>)<i>y</i>) = ((<i>xy</i>)<i>z</i>)<i>y</i>,
    always right alternative,
<li>
    <var>LC-loops</var>, defined by (<i>xx</i>)(<i>yz</i>) = (<i>x</i>(<i>xy</i>))<i>z</i>,
    always left alternative, left and middle nuclear square,
<li>
    <var>RC-loops</var>, defined by <i>x</i>((<i>yz</i>)<i>z</i>) = (<i>xy</i>)(<i>zz</i>),
    always right alternative, right and middle nuclear square,
<li>
    <var>Moufang loops</var>, defined by (<i>xy</i>)(<i>zx</i>) = (<i>x</i>(<i>yz</i>))<i>x</i>,
    always flexible, left and right Bol,
<li>
    <var>C-loops</var>, defined by <i>x</i>(<i>y</i>(<i>yz</i>)) = ((<i>xy</i>)<i>y</i>)<i>z</i>,
    always LC and RC,
<li>
    <var>extra loops</var>, defined by <i>x</i>(<i>y</i>(<i>zx</i>)) = ((<i>xy</i>)<i>z</i>)<i>x</i>,
    always Moufang and C.
</ul>
Note that although some of the defining identities are not of Bol-Moufang type,
they are equivalent to a Bol-Moufang identity. Moreover, many varieties are
defined in several ways, by equivalent identities of Bol-Moufang type.
<p>
There are several varieties related to loops of Bol-Moufang type. A loop is
said to be <var>alternative</var> if it
is both left and right alternative, and <var>nuclear square</var> if it is left, middle and right nuclear
square.
<p>
Here are the corresponding <font face="Gill Sans,Helvetica,Arial">LOOPS</font> commands (argument <i>L</i> indicates that the
property applies only to loops, argument <i>Q</i> indicates that the property
applies also to quasigroups):
<p>
<a name = "SSEC004.1"></a>
<li><code>IsExtraLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsMoufangLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsCLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsLeftBolLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsRightBolLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsLCLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsRCLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsLeftNuclearSquareLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsMiddleNuclearSquareLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsRightNuclearSquareLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsNuclearSquareLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsFlexible( </code><var>Q</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsLeftAlternative( </code><var>Q</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsRightAlternative( </code><var>Q</var><code> ) P</code>
<a name = "SSEC004.1"></a>
<li><code>IsAlternative( </code><var>Q</var><code> ) P</code>
<p>
While listing the varieties of loops of Bol-Moufang type, we have also listed
all inclusions among them. These inclusions are built into <font face="Gill Sans,Helvetica,Arial">LOOPS</font>.
<p>
The following trivial example shows some of the implications and the naming
conventions of <font face="Gill Sans,Helvetica,Arial">LOOPS</font> at work:
<p>
<pre>
gap&gt; L := LoopByCayleyTable( [ [ 1, 2 ], [ 2, 1 ] ] );
&lt;loop of order 2&gt;
gap&gt; [ IsLeftBolLoop( L ), L ]
[ true, &lt;left Bol loop of order 2&gt; ]
gap&gt; [ HasIsLeftAlternativeLoop( L ), IsLeftAlternativeLoop( L ) ];
[ true, true ]
gap&gt; [ HasIsRightBolLoop( L ), IsRightBolLoop( L ) ];
[ false, true ]
gap&gt; L;
&lt;Moufang loop of order 2&gt;
gap&gt; [ IsAssociative( L ), L ];
[ true, &lt;associative loop of order 2&gt; ]
</pre>
<p>
The analogous terminology for quasigroups of Bol-Moufang type is not
standard yet, and hence is not supported in <font face="Gill Sans,Helvetica,Arial">LOOPS</font>.
<p>
<p>
<h2><a name="SECT005">7.5 Power alternative loops</a></h2>
<p><p>
A loop is <var>left power alternative</var> if it is
power associative and <i>x</i><sup><i>n</i></sup>(<i>x</i><sup><i>m</i></sup> <i>y</i>) = <i>x</i><sup><i>n</i>+<i>m</i></sup><i>y</i> for every <i>x</i>, <i>y</i> and all
integers <i>n</i>, <i>m</i>. Similarly, a loop is <var>right power alternative</var> if it is power associative and (<i>xy</i><sup><i>n</i></sup>)<i>y</i><sup><i>m</i></sup> = <i>xy</i><sup><i>n</i>+<i>m</i></sup>
for all <i>x</i>, <i>y</i> and all integers <i>n</i>, <i>m</i>. A loop that is both left and right
power alternative is said to be <var>power alternative</var>.
<p>
Left power alternative loops are left alternative and have the
left inverse property. Left Bol loops and LC-loops are left power
alternative.
<p>
<a name = "SSEC005.1"></a>
<li><code>IsLeftPowerAlternative( </code><var>L</var><code> ) P</code>
<a name = "SSEC005.1"></a>
<li><code>IsRightPowerAlternative( </code><var>L</var><code> ) P</code>
<a name = "SSEC005.1"></a>
<li><code>IsPowerAlternative( </code><var>L</var><code> ) P</code>
<p>
<p>
<h2><a name="SECT006">7.6 Conjugacy closed loops and related properties</a></h2>
<p><p>
noindentA loop is <var>left</var> (resp. <var>right</var>) <var>conjugacy closed</var> if its left (resp. right)
translations are closed under conjugation. A loop that is both left and right
conjugacy closed is called <var>conjugacy closed</var>. It is common to refer to these loops as
LCC-, RCC-, CC-loops, respectively.
<p>
<a name = "SSEC006.1"></a>
<li><code>IsLCCLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC006.1"></a>
<li><code>IsRCCLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC006.1"></a>
<li><code>IsCCLoop( </code><var>L</var><code> ) P</code>
<p>
The equivalence LCC + RCC = CC is built into <font face="Gill Sans,Helvetica,Arial">LOOPS</font>.
<p>
A loop is <var>Osborn</var> if it satisfies
<i>x</i>(<i>yz</i>&#183;<i>x</i>)=(<i>x</i><sup>&#955;</sup>\<i>y</i>)(<i>zx</i>), where <i>x</i><sup>&#955;</sup> is the left
inverse of <i>x</i>. Both Moufang loops and CC-loops are Osborn.
<p>
<a name = "SSEC006.2"></a>
<li><code>IsOsbornLoop( </code><var>L</var><code> ) P</code>
<p>
<p>
<h2><a name="SECT007">7.7 Additional varieties of loops</a></h2>
<p><p>
An <var>(even) code loop</var> is a Moufang 2-loop
with Frattini subloop of order 1 or 2. Code loops are extra and conjugacy
closed.
<p>
<a name = "SSEC007.1"></a>
<li><code>IsCodeLoop( </code><var>L</var><code> ) P</code>
<p>
<var>Steiner loop</var> is an inverse property
loop of exponent 2. Steiner loops are commutative.
<p>
<a name = "SSEC007.2"></a>
<li><code>IsSteinerLoop( </code><var>L</var><code> ) P</code>
<p>
A left (resp. right) Bol loop with the automorphic inverse property is known as
<var>left</var> (resp. <var>right</var>) <var>Bruck loop</var>. Bruck loops are also known as
<var>K-loops</var>.
<p>
<a name = "SSEC007.3"></a>
<li><code>IsLeftBruckLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.3"></a>
<li><code>IsLeftKLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.3"></a>
<li><code>IsRightBruckLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.3"></a>
<li><code>IsRightKLoop( </code><var>L</var><code> ) P</code>
<p>
A loop whose all left (resp. middle, right) inner mappings are automorphisms is
called a <var>left</var> (resp. <var>middle</var>, <var>right</var>)
<var>automorphic loop</var>. A loop
whose every inner mapping is an automorphism is known as an
<var>automorphic loop</var>. Diassociative automorphic loops are Moufang by
<a href="biblio.htm#KiKuPh"><cite>KiKuPh</cite></a>. See the built-in filters for additional properties of automorphic loops.
<p>
<a name = "SSEC007.4"></a>
<li><code>IsLeftAutomorphicLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.4"></a>
<li><code>IsMiddleAutomorphicLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.4"></a>
<li><code>IsRightAutomorphicLoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.4"></a>
<li><code>IsAutomorphicLoop( </code><var>L</var><code> ) P</code>
<p>
Automorphic loops have historically been called <var>A-loops</var>. We therefore support the synonyms
<p>
<a name = "SSEC007.5"></a>
<li><code>IsLeftALoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.5"></a>
<li><code>IsMiddleALoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.5"></a>
<li><code>IsRightALoop( </code><var>L</var><code> ) P</code>
<a name = "SSEC007.5"></a>
<li><code>IsALoop( </code><var>L</var><code> ) P</code>
<p>
Be careful not to confuse <code>IsALoop</code> and <code>IsLoop</code>.
<p>
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP006.htm">Previous</a>] [<a href ="CHAP008.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>loops manual<br>July 2012
</address></body></html>