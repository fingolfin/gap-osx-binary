<!-- ------------------------------------------------------------------- -->
<!--                                                                     -->
<!--  gp2act.xml            XMod documentation            Chris Wensley  -->
<!--                                                        & Murat Alp  -->
<!--  version 2.32, 13/02/2015                                           --> 
<!--                                                                     --> 
<!--  Copyright (C) 2001-2015, Murat Alp and Chris Wensley,              --> 
<!--  School of Computer Science, Bangor University, U.K.                --> 
<!--                                                                     -->
<!-- ------------------------------------------------------------------- -->

<?xml version="1.0" encoding="UTF-8"?>

<Chapter Label="chap-gp2act">
<Heading>Actors of 2d-groups</Heading>

<Section><Heading>Actor of a crossed module</Heading>
<Index>actor</Index>

The <E>actor</E> of <M>{\cal X}</M>  is a crossed module
<M>(\Delta  :  {\cal W}({\cal X}) \to {\rm Aut}({\cal X}))</M>
which was shown by Lue and Norrie, in <Cite Key="N2" /> 
and <Cite Key="N1" /> to give the automorphism object 
of a crossed module <M>{\cal X}</M>.
In this implementation, the source of the actor is a permutation 
representation <M>W</M> of the Whitehead group of regular derivations, 
and the range is a permutation representation <M>A</M> 
of the automorphism group <M>{\rm Aut}({\cal X})</M> of <M>{\cal X}</M>.

<ManSection>
   <Attr Name="WhiteheadXMod"
         Arg="xmod" />
   <Attr Name="LueXMod"
         Arg="xmod" />
   <Attr Name="NorrieXMod"
         Arg="xmod" />
   <Attr Name="ActorXMod"
         Arg="xmod" />
   <Attr Name="AutomorphismPermGroup"
         Arg="xmod" />
<Description>
An automorphism <M>( \sigma, \rho )</M> of <C>X</C> 
acts on the Whitehead monoid by
<M>\chi^{(\sigma,\rho)} = \sigma \circ \chi \circ \rho^{-1}</M>, 
and this action determines the action for the actor.
In fact the four groups <M>R, S, W, A</M>,  the homomorphisms between them, 
and the various actions, 
give five crossed modules forming a <E>crossed square</E>:
<Index>crossed square</Index>
<List>
<Item>
<M>{\cal X} = (\partial : S \to R)</M>,~  
the initial crossed module, on the left,
</Item>
<Item>
<M>{\cal W(X)} = (\eta : S \to W)</M>,~  
the Whitehead crossed module of <M>{\cal X}</M>, at the top,
</Item>
<Item>
<M>{\cal L(X)} = (\Delta\circ\eta = \alpha\circ\partial : S \to A)</M>,~  
the Lue crossed module of <M>{\cal X}</M>, 
along the top-left to bottom-right diagonal,
</Item>
<Item>
<M>{\cal N(X)} = (\alpha : R \to A)</M>,~  
the Norrie crossed module of <M>{\cal X}</M>, at the bottom, and 
</Item>
<Item>
<M>{\rm Act}({\cal X}) = ( \Delta : W \to A)</M>,~  
the actor crossed module of <M>{\cal X}</M>, on the right.
</Item>
</List>
</Description>
</ManSection>

<Example>
<![CDATA[
gap> WGX3 := WhiteheadPermGroup( X3 );
Group([ (1,2,3)(4,5,6), (1,4)(2,6)(3,5) ])
gap> APX3 := AutomorphismPermGroup( X3 );
Group([ (5,7,6), (1,2)(3,4)(6,7) ])
gap> WX3 := WhiteheadXMod( X3 );; 
gap> Display( WX3 );
Crossed module Whitehead[c3->s3] :- 
: Source group has generators:
  [ (1,2,3)(4,6,5) ]
: Range group has generators:
  [ (1,2,3)(4,5,6), (1,4)(2,6)(3,5) ]
: Boundary homomorphism maps source generators to:
  [ (1,3,2)(4,6,5) ]
: Action homomorphism maps range generators to automorphisms:
  (1,2,3)(4,5,6) --> { source gens --> [ (1,2,3)(4,6,5) ] }
  (1,4)(2,6)(3,5) --> { source gens --> [ (1,3,2)(4,5,6) ] }
  These 2 automorphisms generate the group of automorphisms.
gap> LX3 := LueXMod( X3 );;
gap> Display( LX3 );
Crossed module Lue[c3->s3] :- 
: Source group has generators:
  [ (1,2,3)(4,6,5) ]
: Range group has generators:
  [ (5,7,6), (1,2)(3,4)(6,7) ]
: Boundary homomorphism maps source generators to:
  [ (5,7,6) ]
: Action homomorphism maps range generators to automorphisms:
  (5,7,6) --> { source gens --> [ (1,2,3)(4,6,5) ] }
  (1,2)(3,4)(6,7) --> { source gens --> [ (1,3,2)(4,5,6) ] }
  These 2 automorphisms generate the group of automorphisms.
gap> NX3 := NorrieXMod( X3 );; 
gap> Display( NX3 );
Crossed module Norrie[c3->s3] :- 
: Source group has generators:
  [ (4,5,6), (2,3)(5,6) ]
: Range group has generators:
  [ (5,7,6), (1,2)(3,4)(6,7) ]
: Boundary homomorphism maps source generators to:
  [ (5,6,7), (1,2)(3,4)(6,7) ]
: Action homomorphism maps range generators to automorphisms:
  (5,7,6) --> { source gens --> [ (4,5,6), (2,3)(4,5) ] }
  (1,2)(3,4)(6,7) --> { source gens --> [ (4,6,5), (2,3)(5,6) ] }
  These 2 automorphisms generate the group of automorphisms.
gap> AX3 := ActorXMod( X3 );;  Display( AX3);
Crossed module Actor[c3->s3] :- 
: Source group has generators:
  [ (1,2,3)(4,5,6), (1,4)(2,6)(3,5) ]
: Range group has generators:
  [ (5,7,6), (1,2)(3,4)(6,7) ]
: Boundary homomorphism maps source generators to:
  [ (5,6,7), (1,2)(3,4)(6,7) ]
: Action homomorphism maps range generators to automorphisms:
  (5,7,6) --> { source gens --> [ (1,2,3)(4,5,6), (1,5)(2,4)(3,6) ] }
  (1,2)(3,4)(6,7) --> { source gens --> [ (1,3,2)(4,6,5), (1,4)(2,6)(3,5) ] }
  These 2 automorphisms generate the group of automorphisms.
]]>
</Example>

<ManSection>
   <Attr Name="XModCentre"
         Arg="xmod" />
   <Attr Name="InnerActorXMod"
         Arg="xmod" />
   <Attr Name="InnerMorphism"
         Arg="xmod" />
<Description>
Pairs of boundaries or identity mappings
provide six morphisms of crossed modules.
In particular, the boundaries of <M>\mathcal{W}(\mathcal{X})</M> 
and <M>\mathcal{N}(\mathcal{X})</M> 
form the <E>inner morphism</E> of <M>\mathcal{X}</M>, 
mapping source elements to principal derivations
and range elements to inner automorphisms.  
The image of <M>\mathcal{X}</M> under this morphism is the 
<E>inner actor</E> of <M>\mathcal{X}</M>, 
while the kernel is the <E>centre</E> of <M>\mathcal{X}</M>.
In the example which follows, using the crossed module 
<C>(X3 : c3 -> s3)</C> from Chapter <Ref Chap="chap-gp2up" />,
the inner morphism is an inclusion of crossed modules.
</Description>
</ManSection>

<Example>
<![CDATA[
gap> IAX3 := InnerActorXMod( X3 );;  
gap> Display( IAX3 );
Crossed module InnerActor[c3->s3] :- 
: Source group has generators:
  [ (1,3,2)(4,6,5) ]
: Range group has generators:
  [ (5,6,7), (1,2)(3,4)(6,7) ]
: Boundary homomorphism maps source generators to:
  [ (5,7,6) ]
: Action homomorphism maps range generators to automorphisms:
  (5,6,7) --> { source gens --> [ (1,3,2)(4,6,5) ] }
  (1,2)(3,4)(6,7) --> { source gens --> [ (1,2,3)(4,5,6) ] }
  These 2 automorphisms generate the group of automorphisms.

gap> IMX3 := InnerMorphism( X3 );; 
gap> Display( IMX3 );
Morphism of crossed modules :- 
: Source = [c3->s3] with generating sets:
  [ (1,2,3)(4,6,5) ]
  [ (4,5,6), (2,3)(5,6) ]
:  Range = Actor[c3->s3] with generating sets:
  [ (1,2,3)(4,5,6), (1,4)(2,6)(3,5) ]
  [ (5,7,6), (1,2)(3,4)(6,7) ]
: Source Homomorphism maps source generators to:
  [ (1,3,2)(4,6,5) ]
: Range Homomorphism maps range generators to:
  [ (5,6,7), (1,2)(3,4)(6,7) ]
gap> IsInjective( IMX3 );
true
gap> ZX3 := XModCentre( X3 ); 
[Group( () )->Group( () )]
]]>
</Example>

</Section>

</Chapter>
