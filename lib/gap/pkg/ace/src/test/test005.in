
# T from the Cooperman & Havas paper (index is 5^5 = 3125).
# Note that CT is good, RT (in whatever form) is bad, and fill is good.

gr:a,b,c;
rel: a^5, b^5, c^5,
 
  (abc)^5,  (abC)^5 , (abcc)^5,  (abCC)^5,
  (aBc)^5,  (aBC)^5,  (aBcc)^5,  (aBCC)^5,
  (abbc)^5, (abbC)^5, (abbcc)^5, (abbCC)^5,
  (aBBc)^5, (aBBC)^5, (aBBcc)^5, (aBBCC)^5,

  (Abc)^5,  (AbC)^5,  (Abcc)^5,  (AbCC)^5,
  (ABc)^5,  (ABC)^5,  (ABcc)^5,  (ABCC)^5,
  (Abbc)^5, (AbbC)^5, (Abbcc)^5, (AbbCC)^5,
  (ABBc)^5, (ABBC)^5, (ABBcc)^5, (ABBCC)^5,

  (aabc)^5,  (aabC)^5,  (aabcc)^5,  (aabCC)^5,
  (aaBc)^5,  (aaBC)^5,  (aaBcc)^5,  (aaBCC)^5,
  (aabbc)^5, (aabbC)^5, (aabbcc)^5, (aabbCC)^5,
  (aaBBc)^5, (aaBBC)^5, (aaBBcc)^5, (aaBBCC)^5,

  (AAbc)^5,  (AAbC)^5,  (AAbcc)^5,  (AAbCC)^5,
  (AABc)^5,  (AABC)^5,  (AABcc)^5,  (AABCC)^5,
  (AAbbc)^5, (AAbbC)^5, (AAbbcc)^5, (AAbbCC)^5,
  (AABBc)^5, (AABBC)^5, (AABBcc)^5, (AABBCC)^5,

  [a,b,a], [a,b,b], [a,c,a], [a,c,c],

  [b,c,c,c], [b,c,c,b], [b,c,b,c], [b,c,b,b],
  [c,a,b,a], [c,a,b,b], [b,a,c,a], [b,a,c,c],

  [b,a,c,[b,a]], [c,a,b,[c,a]]
  ;
gen: ab, bc;

Mess:10000;

Felsch;  End;		# m=32775 t=34217
No:-1;   End;		# m=50755 t=53121
Fel:1;   End;		# m=47887 t=48400
No:0;    End;		# m=14881 t=15144
PSiz:2;  End;		# m=14551 t=15059
PSiz:4;  End;		# m=14085 t=14729
Fi:6;    End;		# m=12864 t=13116
Fi:5;    End;		# m=11338 t=11524

# Note that collapse is to <3125, and processing the dedns is `slow'.
# So it's better to throw them away.
# If DSiz:50;, then that's too extreme!

DMod:0;  DSiz:100;

# Rep has no trouble in bettering 11524.
# Current best is m=10668 t=10833

# Current best over <ab,ac> is m=8735 t=8868
# Current best over <ac,bc> is m=8778 t=8951
# Current best over <bC,Ca> is m=7198 t=7618

# <a, bc> has index 5^7 = 78125, and requires "c=314.55; m=78354 
#   t=112088)".
# (Recall that DMod:0 & DSiz:100 here; setting them to their `defaults'
#   yields "c=241.87; m=78353 t=111964".
# Much faster; mainly due to the lack of RA phase.)
# Interestingly, there is a min-collapse (n=80679) and the enumeration
#   slows down substantially after this!
# Interesting; due to the %holes decreasing, so scanning takes more
#   work (since it goes further)?

# <c,ab> has index 3125, in t=10722!
# <b,ac> has index 3125, in t=9603!

