#Example: "11gp-3-Engel-Id-i" . . . 3-Engel grp for prime 11
#Variation of "11gp-3-Engel-Id" broken down into its lower-level component
#command parts.
#vars: F, a, b, G, f, procId, Q;
#options: 
F := FreeGroup("a", "b"); a := F.1; b := F.2;
G := F/[ a^11, b^11 ];
## All word pairs u, v in the pc generators of the 11-quotient Q of G 
## must satisfy the Engel identity: [u, v, v, v] = 1.
f := function(u, v) return PqLeftNormComm( [u, v, v, v] ); end;
procId := PqStart( G : Prime := 11 );
PqPcPresentation( procId : ClassBound := 1);;
PqEvaluateIdentities( procId : Identities := [f] );;
for c in [2 .. 4] do
  PqNextClass( procId : Identities := [] ); #reset `Identities' option
  PqEvaluateIdentities( procId : Identities := [f] );
od;
Q := PqCurrentGroup( procId );
## We do a ``sample'' check that pairs of elements of Q do satisfy
## the given identity:
f( Random(Q), Random(Q) );
f( Q.1, Q.2 );
