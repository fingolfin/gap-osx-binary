#############################################################################
##
#W  ctoline7.tbl                GAP table library               Thomas Breuer
##
#Y  Copyright (C)  1997,  Lehrstuhl D fuer Mathematik,  RWTH Aachen,  Germany
##
##  This file contains the ordinary character tables of
##  $L_2(q)$ for $q\in\{37,41,43,47,53,59,61,64,67,71,73,79,83,89,97,101,103,
##  107,109,113,121\}$.
##  (These tables are contained in the character table library only because
##  the library of tables of marks contains the corresponding tables of
##  marks.)
##
#H  ctbllib history
#H  ---------------
#H  $Log: ctoline7.tbl,v $
#H  Revision 4.21  2012/05/07 15:26:47  gap
#H  revert three changes:
#H  - use direct product constructions from `[["Symmetric",4],["S6(2)"]]' and
#H    `[["Symmetric",4],["U4(2).2"]]' instead of `[["s4"],["S6(2)"]]' and
#H    `[["s4"],["U4(2).2"]]', respectively
#H  - use the name `"D62x2"' instead of `"D124"'
#H      TB
#H
#H  Revision 4.20  2012/04/23 16:16:08  gap
#H  next step of consolidation:
#H
#H  - removed a few unnecessary duplicate tables,
#H    and changed some related fusions, names of maxes, table constructions
#H  - make sure that duplicate tables arise only via `ConstructPermuted'
#H    constructions
#H  - added some relative names
#H  - added fusions A11.2 -> A12.2, L2(11).2 -> A12.2, D8x2F4(2)'.2 -> B,
#H    L2(41) -> M, (A5xA12):2 -> A17,
#H  - added maxes of A12.2, L6(2), 2.M22.2
#H  - added table of QD16.2,
#H  - fixed the syntax of two `ALN' calls
#H      TB
#H
#H  Revision 4.19  2012/01/30 08:31:44  gap
#H  removed #H entries from the headers
#H      TB
#H
#H  Revision 4.18  2011/09/28 14:32:13  gap
#H  removed revision entry and SET_TABLEFILENAME call
#H      TB
#H
#H  Revision 4.17  2011/02/09 16:06:27  gap
#H  replaced tables: 27:2^2 -> D108, 28.2^2 -> D112, D62x2 -> D124;
#H  the old names (used in the library of tables of marks) are still
#H  admissible
#H      TB
#H
#H  Revision 4.16  2010/05/05 13:20:02  gap
#H  - added many class fusions,
#H  - changed several class fusions according to consistency conditions,
#H    after systematic checks of consistency
#H    - with Brauer tables w.r.t. the restriction of characters,
#H    - of subgroup fusions with the corresponding subgroup fusions between
#H      proper factors where the factor fusions are stored,
#H    - of subgroup fusions from maximal subgroups with subgroup fusions of
#H      extensions inside automorphic extensions
#H
#H      TB
#H
#H  Revision 4.15  2009/05/11 15:35:50  gap
#H  added fusions L2(59) -> M, L2(71) -> M
#H      TB
#H
#H  Revision 4.14  2009/04/22 12:39:02  gap
#H  added missing maxes of He.2, ON.2, HN.2, Fi24, and B
#H      TB
#H
#H  Revision 4.13  2005/01/26 15:09:29  gap
#H  added table of L2(64).6
#H      TB
#H
#H  Revision 4.12  2003/05/15 17:38:06  gap
#H  next step towards the closer connection to the library of tables of marks:
#H  added fusions tbl -> tom, adjusted fusions between character tables
#H  in order to make the diagrams commute, adjusted orderings of maxes
#H      TB
#H
#H  Revision 4.11  2003/03/07 15:53:35  gap
#H  added tables of `Isoclinic(2.A5.2)' and `L2(125)',
#H  and many `tomidentifier' components (still several are missing)
#H      TB
#H
#H  Revision 4.10  2003/01/14 17:28:49  gap
#H  changed `InfoText' values (for a better programmatic access)
#H  and replaced `ConstructDirectProduct' by `ConstructPermuted' where
#H  there is only one factor (again better programmatic handling)
#H      TB
#H
#H  Revision 4.9  2002/07/15 15:20:03  gap
#H  added missing table automorphisms
#H      TB
#H
#H  Revision 4.8  2002/07/08 16:06:56  gap
#H  changed `construction' component from function (call) to list of function
#H  name and arguments
#H      TB
#H
#H  Revision 4.7  2001/05/04 16:47:52  gap
#H  first revision for ctbllib
#H
#H
#H  tbl history (GAP 4)
#H  -------------------
#H  (Rev. 4.7 of ctbllib coincides with Rev. 4.6 of tbl in GAP 4)
#H  
#H  RCS file: /gap/CVS/GAP/4.0/tbl/ctoline7.tbl,v
#H  Working file: ctoline7.tbl
#H  head: 4.6
#H  branch:
#H  locks: strict
#H  access list:
#H  symbolic names:
#H  	GAP4R2: 4.5.0.6
#H  	GAP4R2PRE2: 4.5.0.4
#H  	GAP4R2PRE1: 4.5.0.2
#H  	GAP4R1: 4.3.0.2
#H  keyword substitution: kv
#H  total revisions: 6;	selected revisions: 6
#H  description:
#H  ----------------------------
#H  revision 4.6
#H  date: 2000/11/27 15:52:29;  author: gap;  state: Exp;  lines: +44 -2
#H  added `IsSimple' info about small linear groups;
#H  not really exciting but for the sake of completeness ...
#H  
#H      TB
#H  ----------------------------
#H  revision 4.5
#H  date: 1999/10/21 14:15:46;  author: gap;  state: Exp;  lines: +5 -2
#H  added many `tomidentifer' and `tomfusion' values, which yields a better
#H  interface between `tom' and `tbl';
#H  
#H  added maxes of McL.2,
#H  
#H  unified tables `J2.2M4', `2^(2+4):(3x3):2^2', `2^(2+4):(S3xS3)'.
#H  
#H      TB
#H  ----------------------------
#H  revision 4.4
#H  date: 1999/10/04 15:57:14;  author: gap;  state: Exp;  lines: +62 -2
#H  added and corrected several fusions from character tables
#H  to their tables of marks,
#H  unified two instances of the table of (A6xA6):2^2,
#H  corrected the name of the table of marks of 2F4(2).
#H  
#H      TB
#H  ----------------------------
#H  revision 4.3
#H  date: 1999/07/14 11:39:39;  author: gap;  state: Exp;  lines: +4 -3
#H  cosmetic changes for the release ...
#H  
#H      TB
#H  ----------------------------
#H  revision 4.2
#H  date: 1998/03/11 08:05:27;  author: gap;  state: Exp;  lines: +107 -88
#H  mainly new fusions to tables of marks added
#H  
#H      TB
#H  ----------------------------
#H  revision 4.1
#H  date: 1997/11/25 15:44:54;  author: gap;  state: Exp;
#H  first attempt to link the library of character tables and the
#H      library of tables of marks
#H          TB
#H  ==========================================================================
##

MOT("L2(37)",
0,
0,
0,
0,
[(4,8,10)(5,11,7),(2,3),(13,14,16,20,15,18,19,17,21)],
["ConstructPermuted",["PSL2even",37]]);
ARC("L2(37)","tomfusion",rec(name:="L2(37)",map:=[1,16,16,11,8,5,8,11,3,
11,8,2,14,14,14,14,14,14,14,14,14],text:=[
"fusion map is unique"
]));
ARC("L2(37)","isSimple",true);
ARC("L2(37)","extInfo",["2","2"]);

MOT("L2(41)",
0,
0,
0,
0,
[(4,6,12,10)(5,9)(7,11),(2,3),(14,15,17,21,18,23)(16,19,22)],
["ConstructPermuted",["PSL2even",41]]);
ARC("L2(41)","tomfusion",rec(name:="L2(41)",map:=[1,24,24,18,11,18,7,4,11,
18,7,18,2,20,20,9,20,20,9,3,20,9,20],text:=[
"fusion map is unique"
]));
ARC("L2(41)","isSimple",true);
ARC("L2(41)","extInfo",["2","2"]);
ALF("L2(41)","M",[1,127,127,69,33,69,12,9,33,69,12,69,3,73,73,20,73,73,20,
5,73,20,73],[
"fusion determined uniquely using that 3B and 4C elements must be contained"
]);
ALN("L2(41)",["MM40"]);

MOT("L2(43)",
0,
0,
0,
0,
[(14,16,22,18,20)(15,19,17,23,21),(2,3),(4,5,7,11,8,13)(6,9,12)],
["ConstructPermuted",["PSL2odd",43]]);
ARC("L2(43)","tomfusion",rec(name:="L2(43)",map:=[1,15,15,10,10,6,10,10,6,3,
10,6,10,11,7,11,7,11,7,11,7,11,7,2],text:=[
"fusion map is unique"
]));
ARC("L2(43)","isSimple",true);
ARC("L2(43)","extInfo",["2","2"]);

MOT("L2(47)",
0,
0,
0,
0,
[(15,19)(16,24)(17,23)(21,25),(15,21)(16,24)(19,25),(2,3),(4,5,7,11,10,12,8,
13,6,9,14)],
["ConstructPermuted",["PSL2odd",47]]);
ARC("L2(47)","tomfusion",rec(name:="L2(47)",map:=[1,26,26,19,19,19,19,19,19,
19,19,19,19,19,20,13,10,7,20,4,20,3,10,13,20,2],text:=[
"fusion map is unique"
]));
ARC("L2(47)","isSimple",true);
ARC("L2(47)","extInfo",["2","2"]);

MOT("L2(53)",
0,
0,
0,
0,
[(4,6,12)(5,9,11)(7,15,13)(8,14,10),(4,8)(5,13)(6,14)(7,9)(10,12)(11,15),(2,
3),(17,18,20,24,27,21,26,23,29)(19,22,28)],
["ConstructPermuted",["PSL2even",53]]);
ARC("L2(53)","tomfusion",rec(name:="L2(53)",map:=[1,15,15,10,8,10,8,10,8,10,8,
10,8,10,8,2,13,13,6,13,13,6,13,13,3,13,13,6,13],text:=[
"fusion map is unique"
]));
ARC("L2(53)","isSimple",true);
ARC("L2(53)","extInfo",["2","2"]);

MOT("L2(59)",
0,
0,
0,
0,
[(18,24,28,30)(19,31,25,21)(20,26)(23,29),(2,3),(4,5,7,11,16,6,9,15,8,13,12,
14,10,17)],
["ConstructPermuted",["PSL2odd",59]]);
ARC("L2(59)","tomfusion",rec(name:="L2(59)",map:=[1,21,21,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,17,14,9,14,6,5,17,14,9,3,17,5,17,14,2],text:=[
"fusion map is unique"
]));
ARC("L2(59)","isSimple",true);
ARC("L2(59)","extInfo",["2","2"]);
ALF("L2(59)","M",[1,152,153,97,97,97,97,97,97,97,97,97,97,97,97,97,97,104,
52,33,52,17,12,104,52,33,5,104,12,104,52,3],[
"fusion map determined by the fact that the subgroup contains 30G elements"
]);
ALN("L2(59)",["MM38"]);

MOT("L2(61)",
0,
0,
0,
0,
[(4,10,14,16)(5,17,11,7)(6,12)(9,15),(2,3),(19,20,22,26,33)(21,24,30,25,32)
(23,28,29,27,31),(19,21,27,22,30,23,33,32,29,20,24,31,26,25,28)],
["ConstructPermuted",["PSL2even",61]]);
ARC("L2(61)","tomfusion",rec(name:="L2(61)",map:=[1,23,23,16,14,9,14,6,5,16,
14,9,3,16,5,16,14,2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19],text:=[
"fusion map is unique"
]));
ARC("L2(61)","isSimple",true);
ARC("L2(61)","extInfo",["2","2"]);

MOT("L2(64)",
0,
0,
0,
0,
[(3,4,6,10,18,33)(5,8,14,26,17,32)(7,12,22,25,19,31)(9,16,30)(11,20,29)(13,24,
21,27,15,28),(3,7,27)(4,12,15)(5,17,14)(6,22,28)(8,32,26)(9,30,16)(10,25,13)
(11,20,29)(18,19,24)(21,33,31),(34,35,37,41,49,65)(36,39,45,57,50,64)(38,43,
53,58,48,63)(40,47,61,42,51,62)(44,55,54,56,52,60)(46,59),(34,36,42,60,49,50,
47,56,37,45,62,55)(35,39,51,44,65,64,61,52,41,57,40,54)(38,48,53)(43,63,58)
(46,59)],
["ConstructPermuted",["SL2even",64]]);
ALF("L2(64)","L2(64).6",[1,2,9,9,8,9,10,8,6,9,5,10,11,8,11,6,8,9,10,5,11,
10,3,11,10,8,11,11,5,6,10,8,9,12,12,13,12,7,13,14,12,14,7,15,13,4,14,7,12,
13,14,15,7,15,15,15,13,7,4,15,14,14,7,13,12],[
"fusion map is unique up to table automorphisms"
]);
ARC("L2(64)","tomfusion",rec(name:="L2(64)",map:=[1,2,65,65,58,65,65,58,41,65,
17,65,65,58,65,41,58,65,65,17,65,65,3,65,65,58,65,65,17,41,65,58,65,67,67,67,
67,44,67,67,67,67,44,67,67,15,67,44,67,67,67,67,44,67,67,67,67,44,15,67,67,67,
44,67,67],text:=[
"fusion map is unique"
]));
ARC("L2(64)","isSimple",true);
ARC("L2(64)","extInfo",["","6"]);

MOT("L2(64).6",
[
"origin: Dixon's Algorithm"
],
[1572480,384,378,195,126,126,65,63,63,63,63,65,65,65,65,3024,48,54,14,18,360,
24,18,15,360,24,18,15,36,12,18,36,12,18],
[,[1,1,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,5,6,25,25,27,28,21,21,23,24,25,26
,27,21,22,23],[1,2,1,4,5,3,7,5,8,8,8,13,14,15,12,16,17,16,19,18,1,2,3,4,1,2,3,
4,16,17,18,16,17,18],,[1,2,3,1,5,6,7,8,10,11,9,7,7,7,7,16,17,18,19,20,25,26,27
,25,21,22,23,21,32,33,34,29,30,31],,[1,2,3,4,1,6,7,3,6,6,6,14,15,12,13,16,17,
18,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],,,,,,[1,2,3,4,5,6,1,8,11,9
,10,4,4,4,4,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]],
[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,E(3),E(3),E(3),E(3),E(3)^2,E(3)^2,
E(3)^2,E(3)^2,-E(3),-E(3),-E(3),-E(3)^2,-E(3)^2,-E(3)^2],
[TENSOR,[2,2]],
[TENSOR,[2,3]],
[TENSOR,[2,4]],
[TENSOR,[2,5]],[64,0,1,-1,1,1,-1,1,1,1,1,-1,-1,-1,-1,8,0,-1,1,-1,4,0,1,-1,4,0
,1,-1,2,0,-1,2,0,-1],
[TENSOR,[7,2]],
[TENSOR,[7,3]],
[TENSOR,[7,4]],
[TENSOR,[7,5]],
[TENSOR,[7,6]],[65,1,2,0,2,-1,0,2,-1,-1,-1,0,0,0,0,7,-1,-2,0,1,5,1,-1,0,5,1,
-1,0,1,-1,1,1,-1,1],
[TENSOR,[13,2]],
[TENSOR,[13,3]],
[TENSOR,[13,4]],
[TENSOR,[13,5]],
[TENSOR,[13,6]],[126,-2,0,1,0,0,-4,0,0,0,0,1,1,1,1,0,0,0,0,0,6,-2,0,1,6,-2,0,
1,0,0,0,0,0,0],
[TENSOR,[19,2]],
[TENSOR,[19,3]],[195,3,6,0,-1,6,0,-1,-1,-1,-1,0,0,0,0,27,3,0,-1,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0],
[TENSOR,[22,2]],[195,3,-3,0,6,0,0,-3,0,0,0,0,0,0,0,21,-3,3,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0],
[TENSOR,[24,2]],[378,-6,0,-12,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0],[378,-6,0,3,0,0,1,0,0,0,0,
-E(65)^3-E(65)^6-E(65)^12-E(65)^17-E(65)^24-E(65)^31-E(65)^34-E(65)^41
-E(65)^48-E(65)^53-E(65)^59-E(65)^62,
-E(65)^7-E(65)^9-E(65)^14-E(65)^18-E(65)^28-E(65)^29-E(65)^36-E(65)^37
-E(65)^47-E(65)^51-E(65)^56-E(65)^58,
-E(65)^11-E(65)^19-E(65)^21-E(65)^22-E(65)^23-E(65)^27-E(65)^38-E(65)^42
-E(65)^43-E(65)^44-E(65)^46-E(65)^54,
-E(65)-E(65)^2-E(65)^4-E(65)^8-E(65)^16-E(65)^32-E(65)^33-E(65)^49-E(65)^57
-E(65)^61-E(65)^63-E(65)^64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[GALOIS,[27,11]],
[GALOIS,[27,7]],
[GALOIS,[27,3]],[390,6,12,0,-2,-6,0,-2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0],[390,6,-6,0,-2,0,0,1,
-E(63)^4-E(63)^10+E(63)^13-E(63)^17+E(63)^19+E(63)^22+E(63)^26-E(63)^31
-E(63)^32+E(63)^37+E(63)^41+E(63)^44-E(63)^46+E(63)^50-E(63)^53-E(63)^59,
E(63)+E(63)^4-E(63)^5+E(63)^8-E(63)^19-E(63)^23-E(63)^26+E(63)^31+E(63)^32
-E(63)^37-E(63)^40-E(63)^44+E(63)^55-E(63)^58+E(63)^59+E(63)^62,
-E(63)+E(63)^5-E(63)^8+E(63)^10-E(63)^13+E(63)^17-E(63)^22+E(63)^23+E(63)^40
-E(63)^41+E(63)^46-E(63)^50+E(63)^53-E(63)^55+E(63)^58-E(63)^62
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[GALOIS,[32,11]],
[GALOIS,[32,5]]],
[( 9,10,11),(21,25)(22,26)(23,27)(24,28)(29,32)(30,33)(31,34),(12,13,14,15)]);

MOT("L2(67)",
0,
0,
0,
0,
[(20,22,28,26,32,24,34,30)(21,25,35,33,27,29,23,31),(2,3),(4,5,7,11,19)(6,9,
15,12,18)(8,13,16,10,17),(4,8,11,10,5,13,19,17,7,16)(6,18,12,15,9)],
["ConstructPermuted",["PSL2odd",67]]);
ARC("L2(67)","tomfusion",rec(name:="L2(67)",map:=[1,15,15,10,10,6,10,10,6,10,
10,6,10,3,6,10,10,6,10,11,8,11,8,11,8,11,8,11,8,11,8,11,8,11,8,2],text:=[
"fusion map is unique"
]));
ARC("L2(67)","isSimple",true);
ARC("L2(67)","extInfo",["2","2"]);

MOT("L2(71)",
0,
0,
0,
0,
[(21,25,31,37,33,27)(22,30,34)(23,35)(24,36,28),(2,3),(4,5,7,11,19,6,9,15,14,
16,12,20)(8,13,18)(10,17)],
["ConstructPermuted",["PSL2odd",71]]);
ARC("L2(71)","tomfusion",rec(name:="L2(71)",map:=[1,34,34,27,27,27,27,11,27,7,
27,27,11,27,27,27,7,11,27,27,28,21,15,13,28,8,28,13,4,21,28,3,28,21,15,13,28,
2],text:=[
"fusion map is unique"
]));
ARC("L2(71)","isSimple",true);
ARC("L2(71)","extInfo",["2","2"]);
ALF("L2(71)","M",[1,169,170,113,113,113,113,20,113,12,113,113,20,113,113,
113,12,20,113,113,117,61,43,28,117,17,117,28,9,61,117,5,117,61,43,28,117,
3],[
"fusion map determined by the fact that 7B and 36D elements are contained"
]);
ALN("L2(71)",["MM37"]);

MOT("L2(73)",
0,
0,
0,
0,
[(4,8,14,20,16,10)(5,13,17)(6,18)(7,19,11),(2,3),(22,23,25,29,37,26,31,38,24,
27,33,34,32,36,28,35,30,39)],
["ConstructPermuted",["PSL2even",73]]);
ARC("L2(73)","tomfusion",rec(name:="L2(73)",map:=[1,28,28,23,17,12,11,23,7,23,
11,4,17,23,3,23,17,12,11,23,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26],text:=[
"fusion map is unique"
]));
ARC("L2(73)","isSimple",true);
ARC("L2(73)","extInfo",["2","2"]);

MOT("L2(79)",
0,
0,
0,
0,
[(23,25,31,35)(24,28,40,36)(26,34)(27,37)(29,41,39,33)(30,38),(23,29,31,39)
(24,36,40,28)(25,41,35,33)(26,34)(30,38),(2,3),(4,5,7,11,19,10,17,14,20,8,13,
22)(6,9,15,18,12,21)],
["ConstructPermuted",["PSL2odd",79]]);
ARC("L2(79)","tomfusion",rec(name:="L2(79)",map:=[1,32,32,25,25,17,25,25,17,
25,25,17,25,25,17,3,25,17,25,25,17,25,28,19,28,12,9,19,28,7,28,4,28,12,28,19,
9,7,28,19,28,2],text:=[
"fusion map is unique"
]));
ARC("L2(79)","isSimple",true);
ARC("L2(79)","extInfo",["2","2"]);

MOT("L2(83)",
0,
0,
0,
0,
[(24,28,40)(25,33,31)(26,38,32)(27,43,39)(29,35,41)(34,36,42),(24,34,28,36,40,
42)(25,43,33,39,31,27)(26,32,38)(29,41,35),(2,3),(4,5,7,11,19,12,21,8,13,23)
(6,9,15,20,10,17,16,18,14,22),(4,6,12,17)(5,9,21,16)(7,15,8,18)(10,23,22,19)
(11,20,13,14)],
["ConstructPermuted",["PSL2odd",83]]);
ARC("L2(83)","tomfusion",rec(name:="L2(83)",map:=[1,21,21,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,14,11,14,17,8,5,14,11,14,17,8,17,
3,11,14,17,8,17,14,2],text:=[
"fusion map is unique"
]));
ARC("L2(83)","isSimple",true);
ARC("L2(83)","extInfo",["2","2"]);

MOT("L2(89)",
0,
0,
0,
0,
[(4,6,12,20,10,24,22,16,8,18)(5,9,21,13,17)(7,15,11,23,19),(2,3),(26,27,29,33,
41,38,44,32,39,42,36,47)(28,31,37,46)(30,35,45)(34,43)],
["ConstructPermuted",["PSL2even",89]]);
ARC("L2(89)","tomfusion",rec(name:="L2(89)",map:=[1,30,30,23,17,23,12,23,17,
23,12,23,17,4,12,23,17,23,12,23,17,23,12,23,2,26,26,15,26,10,15,26,26,7,10,26,
15,26,26,3,26,26,7,26,10,15,26],text:=[
"fusion map is unique"
]));
ARC("L2(89)","isSimple",true);
ARC("L2(89)","extInfo",["2","2"]);

MOT("L2(97)",
0,
0,
0,
0,
[(4,8,26,22)(5,13)(6,18,24,12)(7,23)(9,21)(10,16,20,14)(17,25),(4,10)(5,17)(6,
24)(7,23)(8,16)(12,18)(13,25)(14,22)(20,26),(2,3),(28,29,31,35,43,44,42,46,38,
49,32,37,47,36,45,40,50,30,33,39,51)(34,41,48)],
["ConstructPermuted",["PSL2even",97]]);
ARC("L2(97)","tomfusion",rec(name:="L2(97)",map:=[1,34,34,30,23,20,14,30,11,
30,7,20,23,30,4,30,23,20,3,30,11,30,14,20,23,30,2,32,32,32,32,32,32,10,32,32,
32,32,32,32,10,32,32,32,32,32,32,10,32,32,32],text:=[
"fusion map is unique"
]));
ARC("L2(97)","isSimple",true);
ARC("L2(97)","extInfo",["2","2"]);

MOT("L2(101)",
0,
0,
0,
0,
[(4,6,12,26,22,10,24,16,14,20)(5,9,21,7,15,17,11,27,25,19)(8,18)(13,23),(2,3),
(29,30,32,36,44,47,41,53)(31,34,40,52)(33,38,48,39,50,35,42,51)(37,46,43,49),
(29,33,53,51,41,42,47,35,44,50,36,39,32,48,30,38)(31,43,52,46,40,37,34,49)],
["ConstructPermuted",["PSL2even",101]]);
ARC("L2(101)","tomfusion",rec(name:="L2(101)",map:=[1,22,22,15,13,15,13,7,13,
15,13,15,5,15,13,15,13,7,13,15,13,15,5,15,13,15,13,2,18,18,11,18,18,11,18,18,
11,18,18,11,18,18,11,18,3,11,18,18,11,18,18,11,18],text:=[
"fusion map is unique"
]));
ARC("L2(101)","isSimple",true);
ARC("L2(101)","extInfo",["2","2"]);

MOT("L2(103)",
0,
0,
0,
0,
[(29,31,37,53,51,45)(30,34,46)(32,40,44)(33,43,35,49,39,47)(36,52,48)(38,50,
42),(29,33,53,49)(30,38)(31,43,51,39)(32,48)(34,50)(35,45,47,37)(36,40)(42,46)
(44,52),(2,3),(4,5,7,11,19,22,16,28)(6,9,15,27)(8,13,23,14,25,10,17,26)(12,21,
18,24),(4,8,28,26,16,17,22,10,19,25,11,14,7,23,5,13)(6,18,27,21,15,12,9,24)],
["ConstructPermuted",["PSL2odd",103]]);
ARC("L2(103)","tomfusion",rec(name:="L2(103)",map:=[1,24,24,19,19,12,19,19,12,
19,19,12,19,19,12,19,19,12,19,3,12,19,19,12,19,19,12,19,20,15,20,11,20,15,20,
11,20,15,20,11,4,15,20,11,20,15,20,11,20,15,20,11,20,2],text:=[
"fusion map is unique"
]));
ARC("L2(103)","isSimple",true);
ARC("L2(103)","extInfo",["2","2"]);

MOT("L2(107)",
0,
0,
0,
0,
[(30,34,54,46,52,36,48,42,40)(31,39,33,49,37,43,45,55,51)(32,44,50)(35,53,41),
(2,3),(4,5,7,11,19,24,14,25,12,21,20,22,18,26,10,17,28,6,9,15,27,8,13,23,16,
29)],
["ConstructPermuted",["PSL2odd",107]]);
ARC("L2(107)","tomfusion",rec(name:="L2(107)",map:=[1,21,21,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,14,11,14,17,8,
17,14,5,14,17,8,17,14,11,14,17,3,17,14,11,14,17,8,17,14,2],text:=[
"fusion map is unique"
]));
ARC("L2(107)","isSimple",true);
ARC("L2(107)","extInfo",["2","2"]);

MOT("L2(109)",
0,
0,
0,
0,
[(4,8,28,20,26,10,22,16,14)(5,13,7,23,11,17,19,29,25)(6,18,24)(9,27,15),(2,3),
(31,32,34,38,46,53,39,48,49,47,51,43,56,33,36,42,54,37,44,57)(35,40,50,45,55)
(41,52)],
["ConstructPermuted",["PSL2even",109]]);
ARC("L2(109)","maxes",["109:54","D110","D108","A5","A5"]);
ARC("L2(109)","tomfusion",rec(name:="L2(109)",map:=[1,27,27,20,18,14,18,20,9,
20,18,6,18,20,9,20,18,14,18,20,3,20,18,14,18,20,9,20,18,2,23,23,23,23,11,23,
23,23,23,11,5,23,23,23,11,23,23,23,23,11,23,5,23,23,11,23,23],text:=[
"fusion map is unique"
]));
ARC("L2(109)","isSimple",true);
ARC("L2(109)","extInfo",["2","2"]);

MOT("L2(113)",
0,
0,
0,
0,
[(4,6,12,30,28,22)(5,9,21)(7,15,23)(8,18,14,26,16,20)(10,24)(11,27,19)(13,29,
25),(4,8,28,16,12,14)(5,13,9,29,21,25)(6,18,22,20,30,26)(7,23,15)(10,24)(11,
19,27),(2,3),(32,33,35,39,47,56,38,45,59)(34,37,43,55,40,49,52,46,58)(36,41,
51,48,54,42,53,44,57),(32,36,56,42,33,41,38,53,35,51,45,44,39,48,59,57,47,54)
(34,46,49,55,37,58,52,40,43)],
["ConstructPermuted",["PSL2even",113]]);
ARC("L2(113)","maxes",["113:56","D114","D112","s4","s4"]);
ARC("L2(113)","tomfusion",rec(name:="L2(113)",map:=[1,30,30,25,21,25,14,25,21,
9,8,25,21,25,14,25,4,25,8,25,21,25,14,9,21,25,8,25,21,25,2,28,28,18,28,28,18,
28,28,18,28,28,18,28,28,18,28,28,18,3,28,18,28,28,18,28,28,18,28],text:=[
"fusion map is unique"
]));
ARC("L2(113)","isSimple",true);
ARC("L2(113)","extInfo",["2","2"]);

MOT("L2(121)",
0,
0,
0,
0,
[( 4,10,14,20)( 5,17,25,29)( 6,24,30,12)( 7,31,19,11)( 8,28)( 9,21)(15,27)
(16,32,26,22),( 4,16,14,26)( 5,29,25,17)( 6,24,30,12)( 7,11,19,31)( 9,21)
(10,32,20,22)(15,27),( 2, 3),(34,35,37,41,49,62,36,39,45,57,46,59,42,51,58,44,
 55,50,60,40,47,61,38,43,53,54,52,56,48,63)],
["ConstructPermuted",["PSL2even",121]]);
ARC("L2(121)","maxes",["11^2:60","L2(11).2","L2(121)M3","D122","D120"]);
ARC("L2(121)","tomfusion",rec(name:="L2(121)",map:=[1,16,15,37,31,23,22,
17,12,37,22,23,8,37,7,37,31,4,22,37,12,37,3,23,31,37,7,17,31,23,22,37,2,
42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
42,42,42,42,42,42],text:=[
"fusion map is unique up to table autom., compatible with `Maxes'"
]));
ARC("L2(121)","isSimple",true);
ARC("L2(121)","extInfo",["2","2^2"]);

MOT("L2(125)",
0,
0,
0,
0,
[( 4, 6,12,30,22, 8,18,20,14,32,28,16,26,10,24)( 5, 9,21,11,27,13,33,31,25, 7,
15,29,19,17,23),(2,3),
(35,36,38,42,50,65)(37,40,46,58,49,64)(39,44,54,57,51,63)(41,48,62)(43,52,61)
(45,56,53,59,47,60),
(35,39,59)(36,44,47)(37,49,46)(38,54,60)(40,64,58)(41,62,48)(42,57,45)
(43,52,61)(50,51,56)(53,65,63)],
["ConstructPermuted",["PSL2even",125]]);
ARC("L2(125)","maxes",["5^3:62","D126","D62x2","A5"]);
ARC("L2(125)","tomfusion",rec(name:="L2(125)",map:=[1,5,5,19,15,19,15,19,
15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,
15,2,22,22,13,22,22,13,8,22,7,22,22,13,22,8,13,22,22,7,22,22,3,22,22,13,
22,22,7,8,22,13,22],text:=[
"fusion map is unique"
]));
ARC("L2(125)","isSimple",true);
ARC("L2(125)","extInfo",["2","6"]);

LIBTABLE.LOADSTATUS.ctoline7:="userloaded";

#############################################################################
##
#E

