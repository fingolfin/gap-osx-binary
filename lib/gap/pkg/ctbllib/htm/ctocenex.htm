<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<html>
<meta name="GENERATOR" content="TtH 3.59">
 <style type="text/css"> div.p { margin-top: 7pt;}</style>
 <style type="text/css"><!--
 td div.comp { margin-top: -0.6ex; margin-bottom: -1ex;}
 td div.comb { margin-top: -0.6ex; margin-bottom: -.6ex;}
 td div.hrcomp { line-height: 0.9; margin-top: -0.8ex; margin-bottom: -1ex;}
 td div.norm {line-height:normal;}
 span.roman {font-family: serif; font-style: normal; font-weight: normal;} 
 span.overacc2 {position: relative;  left: .8em; top: -1.2ex;}
 span.overacc1 {position: relative;  left: .6em; top: -1.2ex;} --></style>
 

              
<title> Constructing Character Tables of Central Extensions in GAP</title>
 
<h1 align="center">Constructing Character Tables of Central Extensions in GAP </h1>
  <body bgcolor="FFFFFF"> 

<div class="p"><!----></div>

<h3 align="center"> T<font size="-2">HOMAS</font> B<font size="-2">REUER</font> <br />
<i>Lehrstuhl D f&#252;r Mathematik</i> <br />
<i>RWTH, 52056 Aachen, Germany</i> </h3>

<div class="p"><!----></div>

<h3 align="center">February 19th, 2004 </h3>

<div class="p"><!----></div>


<div class="p"><!----></div>
This note has three aims.
First it shows how the <font face="helvetica">GAP</font> system&nbsp;[<a href="#GAP4" name="CITEGAP4">GAP04</a>] can be utilized to
construct character tables of certain central extensions from known
character tables;
the <font face="helvetica">GAP</font> functions used for that are part of the <font face="helvetica">GAP</font> Character Table
Library&nbsp;[<a href="#CTblLib1.2" name="CITECTblLib1.2">Bre12</a>].
Second it documents several constructions of character tables which are
contained in the <font face="helvetica">GAP</font> Character Table Library.
Third it serves as a testfile for the <font face="helvetica">GAP</font> functions.

<div class="p"><!----></div>



<div class="p"><!----></div>

<h1>Contents </h1><a href="#tth_sEc1"
>1&nbsp; Coprime Central Extensions</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc1.1"
>1.1&nbsp; The Character Table Head</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc1.2"
>1.2&nbsp; The Irreducible Characters</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc1.3"
>1.3&nbsp; Ordering of Conjugacy Classes</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc1.4"
>1.4&nbsp; Compatibility with Smaller Factor Groups</a><br />
<a href="#tth_sEc2"
>2&nbsp; Examples</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc2.1"
>2.1&nbsp; Central Extensions of Simple  A<font size="-2">TLAS</font> Groups</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc2.2"
>2.2&nbsp; Central Extensions of Other  A<font size="-2">TLAS</font> Groups</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc2.3"
>2.3&nbsp; Compatible Central Extensions of Maximal Subgroups</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#tth_sEc2.4"
>2.4&nbsp; The <tt>2B</tt> Centralizer in 3.Fi<sub>24</sub>&#8242; (January 2004)</a><br />


<div class="p"><!----></div>

<div class="p"><!----></div>

 <h2><a name="tth_sEc1">
1</a>&nbsp;&nbsp;Coprime Central Extensions</h2><a name="cce">
</a>

<div class="p"><!----></div>
In this section, we will deal with the following situation.
Let H be a group, Z be a cyclic central subgroup in H,
and Z = Z<sub>1</sub> Z<sub>2</sub> for subgroups Z<sub>1</sub> and Z<sub>2</sub> of coprime orders
m and n, say.
For the sake of simplicity, suppose that both m and n are primes;
the general case is then obtained by iterating the construction process.

<div class="p"><!----></div>
Our aim is to compute the character table of H from the character tables
of H/Z<sub>1</sub> and H/Z<sub>2</sub>.
We assume that the factor fusions from these tables to that of the common
factor group H/Z are known.
Again for the sake of simplicity, we will take the character table of H/Z
as an input.
(See Section&nbsp;<a href="#3F3pN2B">2.4</a> for an example where two different orderings of
classes and characters of H/Z arise from the tables of H/Z<sub>1</sub> and
H/Z<sub>2</sub>.)

<div class="p"><!----></div>
For example, the character table of H = 12.M<sub>22</sub> can be computed from
those of 6.M<sub>22</sub> and 4.M<sub>22</sub>,
and the character table of 6.M<sub>22</sub> can be computed from those of
3.M<sub>22</sub> and 2.M<sub>22</sub> (see Section&nbsp;<a href="#12M22">2.1</a>).

<div class="p"><!----></div>

     <h3><a name="tth_sEc1.1">
1.1</a>&nbsp;&nbsp;The Character Table Head</h3>

<div class="p"><!----></div>
The conjugacy classes and power maps of H are uniquely determined by
the input data specified above.

<div class="p"><!----></div>

<center> <img src="ctocenex1.png" alt="ctocenex1.png" />

</center>

<div class="p"><!----></div>
Suppose that a class C of elements of H/Z has n<sub>C</sub> preimage classes
in H/Z<sub>1</sub> and m<sub>C</sub> preimage classes in H/Z<sub>2</sub>;
then n<sub>C</sub> is either 1 or n, and m<sub>C</sub> is either 1 or m.
The preimage classes of C in H/Z<sub>1</sub> and H/Z<sub>2</sub> are parametrized by
{ j; 0  &#8804; j  &lt;  n<sub>C</sub> } and { i; 0  &#8804; i  &lt;  m<sub>C</sub> }, respectively,
and the preimage classes in H are parametrized by the pairs
{ (i,j); 0  &#8804; i  &lt;  m<sub>C</sub>, 0  &#8804; j  &lt;  n<sub>C</sub> }.

<div class="p"><!----></div>
The centralizer orders of these classes in H are m<sub>C</sub> n<sub>C</sub> times the
centralizer order of C in H/Z.

<div class="p"><!----></div>
The factor fusion onto H/Z<sub>1</sub> is then given by mapping the class with the
parameter (i,j) to the class with the parameter j;
analogously, the factor fusion onto H/Z<sub>2</sub> maps this class to the class
with the parameter i.
To see this, let Z = &#9001;z &#9002;,
and set z<sub>1</sub> = z<sup>n</sup> and z<sub>2</sub> = z<sup>m</sup>.
Now take an element g  &#8712; H for which g Z lies in C.
Then the elements
g z<sub>1</sub><sup>i</sup> z<sub>2</sub><sup>j</sup>, 1  &#8804; i  &#8804; m<sub>C</sub>, 1  &#8804; j  &#8804; n<sub>C</sub>
form a set of representatives of the preimage classes of C in H.
In H/Z<sub>1</sub> and H/Z<sub>2</sub>, these elements map to
g z<sub>2</sub><sup>j</sup> Z<sub>1</sub>, 1  &#8804; j  &#8804; n<sub>C</sub> and
g z<sub>1</sub><sup>i</sup> Z<sub>2</sub>, 1  &#8804; i  &#8804; m<sub>C</sub>, respectively,
which are sets of representatives of the classes in question in these groups.

<div class="p"><!----></div>
For each prime p,
the factor fusions determine the p-th power map of H from the p-th
power maps of H/Z<sub>1</sub> and H/Z<sub>2</sub>.
To see this, take a class C<sub>0</sub> in H that is a preimage
of the class C of H/Z,
and let K be the class of p-th powers of the elements in C.
Then the image of C<sub>0</sub> under the p-th power map
is one of the preimages of K.
We know the images of C<sub>0</sub> under the factor fusions to H/Z<sub>1</sub> and
H/Z<sub>2</sub>, and thus also their images K<sub>1</sub> and K<sub>2</sub> under the p-th power
maps of these groups.
So the class of p-th powers of the elements in C<sub>0</sub> is the unique
class that is mapped to K<sub>1</sub> and K<sub>2</sub> under the factor fusions.

<div class="p"><!----></div>
The construction of the character table head of H from the input data
specified above is implemented by the <font face="helvetica">GAP</font> function
<tt>CharacterTableOfCommonCentralExtension</tt>.

<div class="p"><!----></div>

     <h3><a name="tth_sEc1.2">
1.2</a>&nbsp;&nbsp;The Irreducible Characters</h3>

<div class="p"><!----></div>
First of all, it should be said that it is not obvious how the irreducible
characters of H can be computed from the irreducible characters of
H/Z<sub>1</sub> and H/Z<sub>2</sub>.
Clearly the irreducible characters of the two factor groups can be inflated
to H via the factor fusions, so we have to find those irreducibles that
have neither Z<sub>1</sub> nor Z<sub>2</sub> in their kernels.

<div class="p"><!----></div>
For that, we use the following heuristic.
Let &#949;<sub>z</sub> be a complex primitive &#124;z&#124;-th root of unity.
For integers i, set
<span class="roman">Irr</span><sub>z,i</sub>(H) = { &#967; &#8712; <span class="roman">Irr</span>(H); &#967;(z) = &#949;<sub>z</sub><sup>i</sup> &#967;(1) }.
Then <span class="roman">Irr</span>(H) = &#8746;<sub>i=0</sub><sup>&#124;z&#124;&#8722;1</sup> <span class="roman">Irr</span><sub>z,i</sub>(H), as a disjoint union.
If i is a multiple of m or n, respectively,
then <span class="roman">Irr</span><sub>z,i</sub>(H) consists of the inflations of certain irreducible
characters of H/Z<sub>1</sub> or H/Z<sub>2</sub>, respectively.
The remaining irreducible characters of H lie in <span class="roman">Irr</span><sub>z,i</sub>(H) with
i coprime to &#124;z&#124;.
These characters are algebraic conjugates of <span class="roman">Irr</span><sub>z,1</sub>(H),
so it suffices to compute this subset;
the conjugates are then derived as the last step.

<div class="p"><!----></div>
Since <span class="roman">Irr</span><sub>z,i</sub>(H) &#8855;<span class="roman">Irr</span><sub>z,j</sub>(H)  &#8834; <font size="+0">Z</font>[ <span class="roman">Irr</span><sub>z,i+j</sub>(H) ]
holds,
we start with the tensor products of the known irreducible characters
in <span class="roman">Irr</span><sub>z,i</sub>(H) and <span class="roman">Irr</span><sub>z,j</sub>(H) with the property
i+j  &#8801; 1  mod m n.

<div class="p"><!----></div>
For example, if we have m = 2 and n = 3 then <span class="roman">Irr</span><sub>z,3</sub>(H) consists of
the inflations of those characters in <span class="roman">Irr</span>(H/Z<sub>2</sub>) that are not
characters of H/Z,
and <span class="roman">Irr</span><sub>z,4</sub>(H) consists of the inflations of certain characters in
<span class="roman">Irr</span>(H/Z<sub>1</sub>) that are not characters of H/Z.
The tensor products of these sets of characters lie in the span of
<span class="roman">Irr</span><sub>z,1</sub>(H).

<div class="p"><!----></div>
In general these tensor products are reducible, but some of them may be
in fact irreducible, so we first take these irreducibles, and reduce the
other tensor products with them.
(If H is a direct product of Z and H/Z then all missing irreducibles
are obtained this way.)

<div class="p"><!----></div>
Then we tensor algebraic conjugates of the known characters in the span of
<span class="roman">Irr</span><sub>z,1</sub>(H) with characters in suitable sets
<span class="roman">Irr</span><sub>z,i</sub>(H), in order to get more characters in <span class="roman">Irr</span><sub>z,1</sub>(H);
for example, <span class="roman">Irr</span><sub>z,1</sub>(H) &#8855;<span class="roman">Irr</span><sub>z,0</sub>(H) is a subset of
<font size="+0">Z</font>[<span class="roman">Irr</span><sub>z,1</sub>(H)].

<div class="p"><!----></div>
In the case m = 2 and n = 3, also <span class="roman">Irr</span><sub>z,5</sub>(H) &#8855;Irr<sub>z,2</sub>(H)
yields linear combinations of <span class="roman">Irr</span><sub>z,1</sub>(H).
Note that <span class="roman">Irr</span><sub>z,5</sub>(H) consists of the complex conjugates of
<span class="roman">Irr</span><sub>z,1</sub>(H).

<div class="p"><!----></div>
In the next step, we apply the LLL algorithm (implemented via the <font face="helvetica">GAP</font>
function <tt>LLL</tt>) to the set of reducible characters in <font size="+0">Z</font>[<span class="roman">Irr</span><sub>z,1</sub>(H)]
which we got from the tensor products, and hope to find irreducibles.
In the examples shown below, this step yields all desired irreducible
characters.

<div class="p"><!----></div>

<div class="p"><!----></div>
The <font face="helvetica">GAP</font> function <tt>IrreduciblesForCharacterTableOfCommonCentralExtension</tt>
implements the strategy sketched above.

<div class="p"><!----></div>

     <h3><a name="tth_sEc1.3">
1.3</a>&nbsp;&nbsp;Ordering of Conjugacy Classes</h3><a name="classes">
</a>

<div class="p"><!----></div>
One "natural" choice for the ordering of the columns in the character table
of H is given by respecting the ordering of columns in the character table
of H/Z, and taking the preimage of the class C corresponding to the
parameter (k  mod m<sub>C</sub>, k  mod n<sub>C</sub>) as the k-th class for C.

<div class="p"><!----></div>
If the preimages of C in H/Z<sub>1</sub> and H/Z<sub>2</sub> have class representatives
g Z<sub>1</sub>, g z<sub>2</sub> Z<sub>1</sub>, g z<sub>2</sub><sup>2</sup> Z<sub>1</sub>, &#8230; and
g Z<sub>2</sub>, g z<sub>1</sub> Z<sub>2</sub>, g z<sub>1</sub><sup>2</sup> Z<sub>2</sub>, &#8230;,
respectively (in this ordering),
then the above rule yields representatives of preimages in H
in the ordering 
g, g (z<sub>1</sub> z<sub>2</sub>), g (z<sub>1</sub> z<sub>2</sub>)<sup>2</sup>, &#8230;.

<div class="p"><!----></div>
In the case m = 2, n = 3, the following pattern arises for classes
of H/Z that have m and n preimages in H/Z<sub>1</sub> and H/Z<sub>2</sub>,
respectively.
The vertices are labelled by the roots of unity with which the
values of the characters in the set <span class="roman">Irr</span><sub>z,1</sub>(H) on the first preimage
must be multiplied in order to obtain the values on the given class;
we have &#969; =  exp(2 &#960;i/3).

<div class="p"><!----></div>

<center> <img src="ctocenex2.png" alt="ctocenex2.png" />

</center>

<div class="p"><!----></div>

     <h3><a name="tth_sEc1.4">
1.4</a>&nbsp;&nbsp;Compatibility with Smaller Factor Groups</h3><a name="compat">
</a>

<div class="p"><!----></div>
It may happen that a cyclic central subgroup Z<sub>0</sub> of H contains Z
properly.
Then we choose a class ordering relative to that in the factor group
H/Z<sub>0</sub>,
mainly because the  A<font size="-2">TLAS</font> tables of this type are sorted this way.

<div class="p"><!----></div>
The typical case is the character table of a central extension of the type
12.G that shall be constructed from the character tables of the groups of
the types 4.G and 6.G; here we prefer to order the preimages of a class
in the smaller factor group of the type G according to the above rule.
This results in the following pattern,
where &#949; =  exp(2 &#960;i/12) holds (cf. Section "ATLAS Tables"
in the manual of the <font face="helvetica">GAP</font> Character Table Library).

<div class="p"><!----></div>

<center> <img src="ctocenex3.png" alt="ctocenex3.png" />

</center>

<div class="p"><!----></div>
A more important aspect concerns the computation of the irreducible
characters.
Let Z<sub>0</sub> = &#9001;z<sub>0</sub> &#9002;.
Instead of computing <span class="roman">Irr</span><sub>z,1</sub>(H),
we compute the set <span class="roman">Irr</span><sub>z<sub>0</sub>,1</sub>(H).

<div class="p"><!----></div>
In the computation of the character table of a central extension of the
type 12.G as mentioned above, with &#124;z<sub>0</sub>&#124; = 12,
we start with the characters
<span class="roman">Irr</span><sub>z<sub>0</sub>,3</sub>(H) &#8855;<span class="roman">Irr</span><sub>z<sub>0</sub>,10</sub>(H) &#8746; <span class="roman">Irr</span><sub>z<sub>0</sub>,4</sub>(H) &#8855;<span class="roman">Irr</span><sub>z<sub>0</sub>,9</sub>(H)  &#8838;  <font size="+0">Z</font>[<span class="roman">Irr</span><sub>z<sub>0</sub>,1</sub>(H)],
and later form tensor products involving algebraic conjugates of the
characters in the span of <span class="roman">Irr</span><sub>z<sub>0</sub>,1</sub>(H), using that
<span class="roman">Irr</span><sub>z<sub>0</sub>,1</sub>(H) &#8855;<span class="roman">Irr</span><sub>z<sub>0</sub>,0</sub>(H) &#8746; <span class="roman">Irr</span><sub>z<sub>0</sub>,2</sub>(H) &#8855;<span class="roman">Irr</span><sub>z<sub>0</sub>,11</sub>(H) &#8746; <span class="roman">Irr</span><sub>z<sub>0</sub>,5</sub>(H) &#8855;<span class="roman">Irr</span><sub>z<sub>0</sub>,8</sub>(H) &#8746; <span class="roman">Irr</span><sub>z<sub>0</sub>,6</sub>(H) &#8855;<span class="roman">Irr</span><sub>z<sub>0</sub>,7</sub>(H)
is a subset of <font size="+0">Z</font>[<span class="roman">Irr</span><sub>z<sub>0</sub>,1</sub>(H)].

<div class="p"><!----></div>
Without that modification, the computation of irreducibles is significantly
more involved.

<div class="p"><!----></div>
The <font face="helvetica">GAP</font> function <tt>CharacterTableOfCommonCentralExtension</tt> chooses the
class ordering relative to larger cyclic factor groups,
as in the above picture,
and also uses the above refinement for the computation of irreducible
characters.

<div class="p"><!----></div>

 <h2><a name="tth_sEc2">
2</a>&nbsp;&nbsp;Examples</h2>

<div class="p"><!----></div>
The following examples use the <font face="helvetica">GAP</font> Character Table Library,
so we first load this package.

<div class="p"><!----></div>

<pre>
    gap&#62; LoadPackage( "ctbllib" );
    true

</pre>

<div class="p"><!----></div>

     <h3><a name="tth_sEc2.1">
2.1</a>&nbsp;&nbsp;Central Extensions of Simple  A<font size="-2">TLAS</font> Groups</h3>&nbsp;<a name="12M22">
</a>

<div class="p"><!----></div>
For the following groups,
the  A<font size="-2">TLAS</font> contains the character tables of central extensions M.G of
simple groups G with &#124;M&#124; divisible by two different primes;
in all these cases, we have M  &#8712; { 6, 12 }.

<div class="p"><!----></div>

<pre>
    gap&#62; list:= [
    &#62;     #         G          m.G          n.G           mn.G
    &#62; 
    &#62;     [      "A6",      "2.A6",      "3.A6",        "6.A6" ],
    &#62;     [      "A7",      "2.A7",      "3.A7",        "6.A7" ],
    &#62;     [   "L3(4)",   "2.L3(4)",   "3.L3(4)",     "6.L3(4)" ],
    &#62;     [ "2.L3(4)", "4_1.L3(4)",   "6.L3(4)",  "12_1.L3(4)" ],
    &#62;     [ "2.L3(4)", "4_2.L3(4)",   "6.L3(4)",  "12_2.L3(4)" ],
    &#62;     [     "M22",     "2.M22",     "3.M22",       "6.M22" ],
    &#62;     [   "2.M22",     "4.M22",     "6.M22",      "12.M22" ],
    &#62;     [   "U4(3)",   "2.U4(3)", "3_1.U4(3)",   "6_1.U4(3)" ],
    &#62;     [   "U4(3)",   "2.U4(3)", "3_2.U4(3)",   "6_2.U4(3)" ],
    &#62;     [ "2.U4(3)",   "4.U4(3)", "6_1.U4(3)",  "12_1.U4(3)" ],
    &#62;     [ "2.U4(3)",   "4.U4(3)", "6_2.U4(3)",  "12_2.U4(3)" ],
    &#62;     [   "O7(3)",   "2.O7(3)",   "3.O7(3)",     "6.O7(3)" ],
    &#62;     [   "U6(2)",   "2.U6(2)",   "3.U6(2)",     "6.U6(2)" ],
    &#62;     [     "Suz",     "2.Suz",     "3.Suz",       "6.Suz" ],
    &#62;     [    "Fi22",    "2.Fi22",    "3.Fi22",      "6.Fi22" ],
    &#62;   ];;

</pre>

<div class="p"><!----></div>
As was discussed in the sections&nbsp;<a href="#classes">1.3</a> and&nbsp;<a href="#compat">1.4</a>,
the class ordering of the result tables is the same as that in the <font face="helvetica">GAP</font>
library tables,
so it is enough to check whether the set of characters in the computed
table coincides with the set of characters in the library table.

<div class="p"><!----></div>
In order to list information about the progress, we set the relevant
info level to 1.

<div class="p"><!----></div>

<pre>
    gap&#62; SetInfoLevel( InfoCharacterTable, 1 );
    gap&#62; for entry in list do
    &#62;   id    := entry[4];
    &#62;   tblG  := CharacterTable( entry[1] );
    &#62;   tblmG := CharacterTable( entry[2] );
    &#62;   tblnG := CharacterTable( entry[3] );
    &#62;   lib   := CharacterTable( id );
    &#62;   res:= CharacterTableOfCommonCentralExtension( tblG, tblmG, tblnG, id );
    &#62;   if not res.IsComplete then
    &#62;     Print( "#E  not complete: ", id, "\n" );
    &#62;   fi;
    &#62;   if not IsSubset( Irr( lib ), res.irreducibles ) then
    &#62;     Print( "#E  inconsistent: ", id, "\n" );
    &#62;   fi;
    &#62; od;
    #I  6.A6: need 4 faithful irreducibles
    #I  6.A6: 4 found by tensoring
    #I  6.A7: need 5 faithful irreducibles
    #I  6.A7: 5 found by tensoring
    #I  6.L3(4): need 7 faithful irreducibles
    #I  6.L3(4): 7 found by LLL
    #I  12_1.L3(4): need 5 faithful irreducibles
    #I  12_1.L3(4): 2 found by tensoring
    #I  12_1.L3(4): 3 found by tensoring
    #I  12_2.L3(4): need 6 faithful irreducibles
    #I  12_2.L3(4): 6 found by LLL
    #I  6.M22: need 10 faithful irreducibles
    #I  6.M22: 1 found by tensoring
    #I  6.M22: 9 found by LLL
    #I  12.M22: need 7 faithful irreducibles
    #I  12.M22: 7 found by LLL
    #I  6_1.U4(3): need 15 faithful irreducibles
    #I  6_1.U4(3): 1 found by tensoring
    #I  6_1.U4(3): 14 found by LLL
    #I  6_2.U4(3): need 12 faithful irreducibles
    #I  6_2.U4(3): 12 found by LLL
    #I  12_1.U4(3): need 12 faithful irreducibles
    #I  12_1.U4(3): 4 found by tensoring
    #I  12_1.U4(3): 8 found by tensoring
    #I  12_2.U4(3): need 9 faithful irreducibles
    #I  12_2.U4(3): 9 found by LLL
    #I  6.O7(3): need 12 faithful irreducibles
    #I  6.O7(3): 2 found by tensoring
    #I  6.O7(3): 10 found by LLL
    #I  6.U6(2): need 28 faithful irreducibles
    #I  6.U6(2): 2 found by tensoring
    #I  6.U6(2): 26 found by LLL
    #I  6.Suz: need 29 faithful irreducibles
    #I  6.Suz: 29 found by LLL
    #I  6.Fi22: need 34 faithful irreducibles
    #I  6.Fi22: 4 found by tensoring
    #I  6.Fi22: 30 found by LLL
    gap&#62; SetInfoLevel( InfoCharacterTable, 0 );

</pre>

<div class="p"><!----></div>
We see that in all cases, the irreducible characters of the groups M.G
are obtained by reducing tensor products and applying the LLL algorithm.

<div class="p"><!----></div>

     <h3><a name="tth_sEc2.2">
2.2</a>&nbsp;&nbsp;Central Extensions of Other  A<font size="-2">TLAS</font> Groups</h3>

<div class="p"><!----></div>
The following cases also fit to the pattern introduced above.

<div class="p"><!----></div>
(The following examples were added in October&nbsp;2006.)

<div class="p"><!----></div>
The group (2<sup>2</sup> &times;3).L<sub>3</sub>(4) can be viewed as a
common central extension of its factor group 2.L<sub>3</sub>(4)
by the two groups 2<sup>2</sup>.L<sub>3</sub>(4) and 6.L<sub>3</sub>(4).

<div class="p"><!----></div>
Analogously, the group (4<sup>2</sup> &times;3).L<sub>3</sub>(4) can be viewed as a
common central extension of its factor group (2 &times;4).L<sub>3</sub>(4)
by the two groups 4<sup>2</sup>.L<sub>3</sub>(4) and (2 &times;12).L<sub>3</sub>(4).

<div class="p"><!----></div>
Finally, the group (2 &times;12).L<sub>3</sub>(4) can be viewed as a
common central extension of the factor group 2<sup>2</sup>.L<sub>3</sub>(4)
by the two groups (2 &times;4).L<sub>3</sub>(4) and (2<sup>2</sup> &times;3).L<sub>3</sub>(4).

<div class="p"><!----></div>
The construction of the character tables of the involved factor groups
as well as an alternative construction of the table of (2 &times;12).L<sub>3</sub>(4)
can be found in&nbsp;[<a href="#Auto" name="CITEAuto">Bre</a>].

<div class="p"><!----></div>

<pre>
    gap&#62; list2:= [
    &#62;     [ "2.L3(4)",     "2^2.L3(4)",   "6.L3(4)",       "(2^2x3).L3(4)" ],
    &#62;     [ "2^2.L3(4)",   "(2x4).L3(4)", "(2^2x3).L3(4)", "(2x12).L3(4)"  ],
    &#62;     [ "(2x4).L3(4)", "4^2.L3(4)",   "(2x12).L3(4)",  "(4^2x3).L3(4)" ],
    &#62;   ];;

</pre>

<div class="p"><!----></div>

<div class="p"><!----></div>
(The following examples were added in December&nbsp;2010.)

<div class="p"><!----></div>
The group (3<sup>2</sup> &times;2).U<sub>4</sub>(3) can be viewed
as a common central extension of its factor group 3<sub>1</sub>.U<sub>4</sub>(3)
by the two groups 6<sub>1</sub>.U<sub>4</sub>(3) and 3<sup>2</sup>.U<sub>4</sub>(3),
or as a common central extension of its factor group 3<sub>2</sub>.U<sub>4</sub>(3)
by the two groups 6<sub>2</sub>.U<sub>4</sub>(3) and 3<sup>2</sup>.U<sub>4</sub>(3).

<div class="p"><!----></div>
Analogously, the group (3<sup>2</sup> &times;4).U<sub>4</sub>(3) can be viewed
as a common central extension of its factor group 6<sub>1</sub>.U<sub>4</sub>(3)
by the two groups 12<sub>1</sub>.U<sub>4</sub>(3) and (3<sup>2</sup> &times;2).U<sub>4</sub>(3),
or as a common central extension of its factor group 6<sub>2</sub>.U<sub>4</sub>(3)
by the two groups 12<sub>2</sub>.U<sub>4</sub>(3) and (3<sup>2</sup> &times;2).U<sub>4</sub>(3).

<div class="p"><!----></div>

<pre>
    gap&#62; Append( list2, [
    &#62;     [ "3_1.U4(3)",   "6_1.U4(3)",   "3^2.U4(3)",     "(3^2x2).U4(3)" ],
    &#62;     [ "3_2.U4(3)",   "6_2.U4(3)",   "3^2.U4(3)",     "(3^2x2).U4(3)" ],
    &#62;     [ "6_1.U4(3)",   "12_1.U4(3)",  "(3^2x2).U4(3)", "(3^2x4).U4(3)" ],
    &#62;     [ "6_2.U4(3)",   "12_2.U4(3)",  "(3^2x2).U4(3)", "(3^2x4).U4(3)" ],
    &#62;   ] );
    gap&#62; SetInfoLevel( InfoCharacterTable, 1 );
    gap&#62; for entry in list2 do
    &#62;   id    := entry[4];
    &#62;   tblG  := CharacterTable( entry[1] );
    &#62;   tblmG := CharacterTable( entry[2] );
    &#62;   tblnG := CharacterTable( entry[3] );
    &#62;   lib   := CharacterTable( id );
    &#62;   res:= CharacterTableOfCommonCentralExtension( tblG, tblmG, tblnG, id );
    &#62;   if not res.IsComplete then
    &#62;     Print( "#E  not complete: ", id, "\n" );
    &#62;   fi;
    &#62;   if TransformingPermutationsCharacterTables( res.tblmnG, lib ) = fail then
    &#62;     Print( "#E  inconsistent: ", id, "\n" );
    &#62;   fi;
    &#62; od;
    #I  (2^2x3).L3(4): need 14 faithful irreducibles
    #I  (2^2x3).L3(4): 14 found by tensoring
    #I  (2x12).L3(4): need 11 faithful irreducibles
    #I  (2x12).L3(4): 7 found by tensoring
    #I  (2x12).L3(4): 4 found by LLL
    #I  (4^2x3).L3(4): need 22 faithful irreducibles
    #I  (4^2x3).L3(4): 14 found by tensoring
    #I  (4^2x3).L3(4): 8 found by LLL
    #I  (3^2x2).U4(3): need 39 faithful irreducibles
    #I  (3^2x2).U4(3): 27 found by tensoring
    #I  (3^2x2).U4(3): 12 found by LLL
    #I  (3^2x2).U4(3): need 42 faithful irreducibles
    #I  (3^2x2).U4(3): 2 found by tensoring
    #I  (3^2x2).U4(3): 40 found by LLL
    #I  (3^2x4).U4(3): need 30 faithful irreducibles
    #I  (3^2x4).U4(3): 6 found by tensoring
    #I  (3^2x4).U4(3): 8 found by tensoring
    #I  (3^2x4).U4(3): 16 found by LLL
    #I  (3^2x4).U4(3): need 33 faithful irreducibles
    #I  (3^2x4).U4(3): 9 found by tensoring
    #I  (3^2x4).U4(3): 18 found by tensoring
    #I  (3^2x4).U4(3): 6 found by further tensoring
    gap&#62; SetInfoLevel( InfoCharacterTable, 0 );

</pre>

<div class="p"><!----></div>

     <h3><a name="tth_sEc2.3">
2.3</a>&nbsp;&nbsp;Compatible Central Extensions of Maximal Subgroups</h3>

<div class="p"><!----></div>
The <font face="helvetica">GAP</font> Character Table Library contains the character tables of all
maximal subgroups of the groups 4.M<sub>22</sub>, 3.M<sub>22</sub>, 2.Suz, and 3.Suz.
So we can use the approach from Section&nbsp;<a href="#cce">1</a> for computing the character
tables of the maximal subgroups of 6.M<sub>22</sub>, 12.M<sub>22</sub>, and 6.Suz.

<div class="p"><!----></div>
These tables are contained in the <font face="helvetica">GAP</font> Character Table Library.
Several of the groups are direct products,
and the library tables of direct products are usually stored in the form of
Kronecker products of the tables of the factors,
so the class ordering of the result tables does not necessarily coincide with
the class ordering in the library tables.

<div class="p"><!----></div>

<pre>
    gap&#62; sublist:= list{ [ 6, 7, 14 ] };
    [ [ "M22", "2.M22", "3.M22", "6.M22" ], 
      [ "2.M22", "4.M22", "6.M22", "12.M22" ], 
      [ "Suz", "2.Suz", "3.Suz", "6.Suz" ] ]
    gap&#62; for entry in sublist do
    &#62;   tblG  := CharacterTable( entry[1] );
    &#62;   tblmG := CharacterTable( entry[2] );
    &#62;   tblnG := CharacterTable( entry[3] );
    &#62;   lib   := CharacterTable( entry[4] );
    &#62; 
    &#62;   maxesG   := List( Maxes( tblG ), CharacterTable );
    &#62;   maxesmG  := List( Maxes( tblmG ), CharacterTable );
    &#62;   maxesnG  := List( Maxes( tblnG ), CharacterTable );
    &#62;   maxeslib := List( Maxes( lib ), CharacterTable );
    &#62; 
    &#62;   for i in [ 1 .. Length( maxesG ) ] do
    &#62;     id:= Identifier( maxeslib[i] );
    &#62;     res:= CharacterTableOfCommonCentralExtension( maxesG[i], maxesmG[i],
    &#62;                                                   maxesnG[i], id );
    &#62;     if not res.IsComplete then
    &#62;       Print( "#E  not complete: ", id, "\n" );
    &#62;     fi;
    &#62;     if not IsSubset( Irr( maxeslib[i] ), res.irreducibles ) then
    &#62;       trans:= TransformingPermutationsCharacterTables( maxeslib[i],
    &#62;                                                        res.tblmnG );
    &#62;       if not IsRecord( trans ) then
    &#62;         Print( "#E  not transformable: ", id, "\n" );
    &#62;       fi;
    &#62;     fi;
    &#62;   od;
    &#62; od;

</pre>

<div class="p"><!----></div>
Since we get no output, all tables in question can be computed with the
<font face="helvetica">GAP</font> functions, and coincide (up to permutations of rows and columns)
with the library tables.

<div class="p"><!----></div>

     <h3><a name="tth_sEc2.4">
2.4</a>&nbsp;&nbsp;The <tt>2B</tt> Centralizer in 3.Fi<sub>24</sub>&#8242; (January 2004)</h3><a name="3F3pN2B">
</a>

<div class="p"><!----></div>
As is stated in&nbsp;[<a href="#CCN85" name="CITECCN85">CCN<sup>+</sup>85</a>,p.&nbsp;207],
the <tt>2B</tt> centralizer N<sub>0</sub> in the sporadic simple Fischer group
Fi<sub>24</sub>&#8242;
has the structure 2<sup>1+12</sup><sub>+</sub>.3U<sub>4</sub>(3).2<sub>2</sub>.
The character table of N<sub>0</sub> is contained in the <font face="helvetica">GAP</font> Character
Table Library since the year 2000.

<div class="p"><!----></div>
Our aim is to compute the character table of the preimage N of
N<sub>0</sub> in the central extension 3.Fi<sub>24</sub>&#8242; of Fi<sub>24</sub>&#8242;;
let Z<sub>1</sub> denote the centre of 3.Fi<sub>24</sub>&#8242;.

<div class="p"><!----></div>
Using the "dihedral group method" in the faithful permutation
representation of degree 920&nbsp;808 for 3.Fi<sub>24</sub>&#8242;,
we first compute a generating set of N.
This group has three orbits of the lengths 774&nbsp;144, 145&nbsp;152,
and 1&nbsp;512;
the actions on the first two orbits are faithful,
and the action on the orbit of length 1&nbsp;512
(which consists of the fixed points of the central involution of N)
has kernel exactly the central subgroup Z<sub>2</sub>, say, of order 2 in N.

<div class="p"><!----></div>
Since the permutation representation on 1&nbsp;512 points is so small,
it is straightforward to compute the character table of N/Z<sub>2</sub> using the
implementation of Dixon's algorithm in <font face="helvetica">GAP</font>;
now this table is part of the <font face="helvetica">GAP</font> Character Table Library.

<div class="p"><!----></div>
Now we note that N is a central extension of N<sub>0</sub>/Z(N<sub>0</sub>)
by the cyclic group Z = Z<sub>1</sub> Z<sub>2</sub> of order 6,
and that we know the character tables of the groups N/Z<sub>1</sub> and N/Z<sub>2</sub>.
So we can apply the method described in Section&nbsp;<a href="#cce">1</a> for computing
the character table of N.

<div class="p"><!----></div>
First we fetch the input data.

<div class="p"><!----></div>

<pre>
    gap&#62; tblmG := CharacterTable( "F3+N2B" );;
    gap&#62; tblG  := tblmG / ClassPositionsOfCentre( tblmG );;
    gap&#62; tblnG := CharacterTable( "2^12.3^2.U4(3).2_2'" );;

</pre>

<div class="p"><!----></div>
The character tables of the library table of N<sub>0</sub>
and the character table of N/Z<sub>2</sub> obtained from the permutation group
are not compatible in the sense that the tables of the factor groups modulo
the centres are not sorted compatibly,
so we have to compute and store the fusion from <tt>tblnG</tt> to <tt>tblG</tt>.

<div class="p"><!----></div>

<pre>
    gap&#62; f2:= tblnG / ClassPositionsOfCentre( tblnG );;
    gap&#62; trans:= TransformingPermutationsCharacterTables( f2, tblG );;
    gap&#62; tblnGfustblG:= OnTuples( GetFusionMap( tblnG, f2 ),
    &#62;                             trans.columns );;
    gap&#62; StoreFusion( tblnG, tblnGfustblG, tblG );
    gap&#62; IsSubset( Irr( tblnG ), List( Irr( tblG ), x -&#62; x{ tblnGfustblG } ) );
    true

</pre>

<div class="p"><!----></div>
Now we apply <tt>CharacterTableOfCommonCentralExtension</tt>.

<div class="p"><!----></div>

<pre>
    gap&#62; SetInfoLevel( InfoCharacterTable, 1 );
    gap&#62; id:= "3.2^(1+12).3U4(3).2";;
    gap&#62; res:= CharacterTableOfCommonCentralExtension( tblG, tblmG, tblnG, id );;
    #I  3.2^(1+12).3U4(3).2: need 36 faithful irreducibles
    #I  3.2^(1+12).3U4(3).2: 16 found by tensoring
    #I  3.2^(1+12).3U4(3).2: 20 found by LLL
    gap&#62; SetInfoLevel( InfoCharacterTable, 0 );

</pre>

<div class="p"><!----></div>
So we have found all missing irreducibles of N.
Let us check whether the result table coincides with the table in the <font face="helvetica">GAP</font>
Character Table Library.

<div class="p"><!----></div>

<pre>
    gap&#62; lib:= CharacterTable( "3.F3+N2B" );;
    gap&#62; IsRecord( TransformingPermutationsCharacterTables( res.tblmnG, lib ) );
    true

</pre>

<div class="p"><!----></div>
We were interested in the character table because N is a maximal subgroup
of 3.Fi<sub>24</sub>&#8242;.
So the class fusion into the table of this group is an interesting
information.
We assume that the class fusion of N<sub>0</sub> into Fi<sub>24</sub>&#8242; is known,
and compute only those possible class fusions that are compatible with this
map.

<div class="p"><!----></div>

<pre>
    gap&#62; 3f3p:= CharacterTable( "3.F3+" );;
    gap&#62; f3p:= CharacterTable( "F3+" );;
    gap&#62; approxfus:= CompositionMaps( InverseMap( GetFusionMap( 3f3p, f3p ) ),
    &#62;                    CompositionMaps( GetFusionMap( tblmG, f3p ),
    &#62;                        GetFusionMap( lib, tblmG ) ) );;
    gap&#62; poss:= PossibleClassFusions( lib, 3f3p, rec( fusionmap:= approxfus ) );;
    gap&#62; Length( poss );
    1

</pre>

<div class="p"><!----></div>
It turns out that only one map has this property.
(Without the condition on the compatibility, we would have got 128
possibilities, which form one orbit under table automorphisms.)

<div class="p"><!----></div>


<h2>References</h2>

<dl compact="compact">
 <dt><a href="#CITEAuto" name="Auto">[Bre]</a></dt><dd>
T.&nbsp;Breuer, <em>Using table automorphisms for constructing character tables in
  <font face="helvetica">GAP</font></em>, <a href="http://www.math.rwth-aachen.de/~Thomas.Breuer/ctbllib/doc/ctblcons.pdf"><tt>http://www.math.rwth-aachen.de/</tt>
<tt><tt>~</tt>Thomas.Breuer/</tt>
<tt>ctbllib/</tt><tt>doc/</tt>
<tt>ctblcons.pdf</tt></a>.

<div class="p"><!----></div>
</dd>
 <dt><a href="#CITECTblLib1.2" name="CTblLib1.2">[Bre12]</a></dt><dd>
<br /><table align="left" border="0"><tr><td width="50">
<hr />
</td></tr></table><!--hbox-->
 , <em>The <font face="helvetica">GAP</font> Character Table Library, Version 1.2</em>,
  <a href="http://www.math.rwth-aachen.de/~Thomas.Breuer/ctbllib"><tt>http://www.math.rwth-aachen.de/</tt>
<tt><tt>~</tt>Thomas.Breuer/</tt>
<tt>ctbllib</tt></a>, Mar 2012, <font face="helvetica">GAP</font> package.

<div class="p"><!----></div>
</dd>
 <dt><a href="#CITECCN85" name="CCN85">[CCN<sup>+</sup>85]</a></dt><dd>
J.&nbsp;H. Conway, R.&nbsp;T. Curtis, S.&nbsp;P. Norton, R.&nbsp;A. Parker, and R.&nbsp;A. Wilson,
  <em>Atlas of finite groups</em>, Oxford University Press, Eynsham, 1985,
  Maximal subgroups and ordinary characters for simple groups, With
  computational assistance from J. G. Thackray. MR 827219 (88g:20025)

<div class="p"><!----></div>
</dd>
 <dt><a href="#CITEGAP4" name="GAP4">[GAP04]</a></dt><dd>
The GAP&nbsp;Group, <em>GAP-Groups, Algorithms, and
  Programming, Version 4.4</em>, 2004, <a href="http://www.gap-system.org"><tt>http://www.gap-system.org</tt></a>.</dd>
</dl>


<div class="p"><!----></div>

<div class="p"><!----></div>

<br /><br /><hr /><small>File translated from
T<sub><font size="-1">E</font></sub>X
by <a href="http://hutchinson.belmont.ma.us/tth/">
T<sub><font size="-1">T</font></sub>H</a>,
version 3.59.<br />On  5 May 2012, 09:09.</small>
</html>
