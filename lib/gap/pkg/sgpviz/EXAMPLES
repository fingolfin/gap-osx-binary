gap> g0:=Transformation([4,1,2,4]);;
gap> g1:=Transformation([1,3,4,4]);;
gap> g2:=Transformation([2,4,3,4]);;
gap> poi3:= Monoid(g0,g1,g2);
<monoid with 3 generators>

gap> DrawDClasses(poi3);
gap> DrawDClassOfElement(poi3,g1);

gap> DrawSchutzenbergerGraphs(poi3);

gap> SemigroupFactorization(poi3,Transformation( [ 4, 4, 3, 4 ] ));
[ [ Transformation( [ 2, 4, 3, 4 ] ), Transformation( [ 2, 4, 3, 4 ] ) ] ]

gap> RightCayleyGraphAsAutomaton(poi3);
< deterministic automaton on 3 letters with 20 states >

gap> XSemigroup();
gap> XAutomaton();
