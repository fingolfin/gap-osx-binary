2000-05-19  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-exec): Remove empty strings from SWITCHES

1999-12-06  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-internal): Removed bug: Adding of trailing
	slash crashed if directory was nil
	(singular-completion-do): Added completion of examples
	(singular-example): Added (including key-binding and menu item)

1999-09-14  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-exit-singular): New strategy for the
	communication between `singular-exit-singular' and
	`singular-exit-sentinel'. Some new functions and variables
	introduced.
	(singular-restart): now deletes a running singular process
	(singular-exit-sentinel): On demand inserts a string indicating
	that the process was killed

1999-09-08  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-interactive-mode-menu-init): Also remove
	  "Singular"-start menu
	  (singular-interactive-mode-map): corrected key for
	  singular-exit-singular
	  (singular-help): added new version of Jens

	* .emacs-singular Singular start menu for XEmacs appears now
	  in every buffer

1999-09-01  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-interactive-mode): added
          (singular-exec-init) and (singular-comint-init)

1999-08-31  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* .emacs-singular added template for Singular button in toolbar

	* singular.el (singular-dynamic-complete): regexp
	  singular-prompt-regexp now is obsolete. Used
	  (singular-prompt-skip-forward) instead
	  key pattern for "C-c $" and "C-c <" changed (did not work
	  for emacs20)
	  (singular-interactive-mode-menu-1/2): updated
	  (singular-expand-emacs-file-name): conditionally append "/" to
	  singular-emacs-home-directory

1999-08-30  T. Wichmann  <wichmann@itwm.uni-kl.de>

	* singular.el (singular, singular-restart, singular-other): Doc
	  strings rewritten

1999-08-25  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-other) now has 4 arguments

	* singular.el Added "-t" to singular-switches-magic

1999-08-23  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el (singular-interactive-mode-menu-init): Any menu
          installed by comint-mode is removed

	* singular.el (singular-exit-sentinel): remove libraries menu only if buffer is
	  existent

	* singular.el Added a "*" to some variables` doc string

1999-08-27  Jens Schmidt  <schmidt@de.oracle.com>

	* .bashrc (STARTUP): load `cmpl-hlp.el' now

	* singular.el: `Online help' folding finished

1999-08-26  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-error): new function

	* .bashrc: adapted to new Singular version

	* .emacs-singular: code removed that starts Singular

	* .emacs-singular: code added to add global menus for Emacs and
	  XEmacs

	* .emacs-singular: settings for `singular-help-same-window'
	  added.  Settings for `singular-history-keys' and
	  `singular-cursor-keys' removed.

1999-08-24  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-same-window): new defcustom
	  (singular): uses the above variable to pop to buffer

	* singular.el: Folding `Starting Singular' renamed to `Starting
	  and stopping Singular'
	  (singular-exit-singular): moved to that folding

	* singular.el (singular-move-on-send): marked as user option

	* singular.el (singular-demo-last-directory): new variable
	  (singular-demo-mode-init): makes the above variable buffer-local
	  (singular-demo-load): uses and sets the above variable in
	  interactive specifier

	* singular.el (singular-demo-print-messages,
	  singular-demo-exit-on-load): default values changed

	* singular.el (singular-demo-chunk-regexp,
	  singular-demo-print-messages, singular-demo-exit-on-load,
	  singular-demo-load-directory): marked as user options

	* singular.el: Lots of changes to `Online help' folding.  Is still
	  quiet experimental.

	* singular.el (singular-history-ignoredups, singular-history-size,
	  singular-history-filter-regexp,
	  singular-history-explicit-file-name): marked as user options

	* singular.el (singular-beginning-of-line): new function

	* singular.el (singular-toggle-truncate-lines): bug fix.  Does
	  frame refresh now after toggling value.

	* singular.el (singular-pop-to-buffer): new function.  Used in
	  `singular-help' and `singular'.

	* singular.el (singular-cursor-key-model): new defcustom replacing
	  former `singular-history-keys' and `singular-cursor-keys'
	  (singular-cursor-key-model-set): new function replacing former
	  `singular-history-cursor-keys-set' and
	  `singular-history-cursor-key-set'
	  static initialization removed

	* singular.el (singular-interactive-mode-map): key bindings added
	  for:
	  `singular-help'
	  `singular-beginning-of-line'
	  `singular-toggle-truncate-lines'
	  `singular-demo-load'
	  `singular-load-library'
	  `singular-load-file'
	  `singular-restart'
	  `singular-exit-singular'

	* singular.el (singular): new customizing group
	  (singular-interactive): made a subgroup of the above group

1999-08-20  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-move-on-send): new defcustom
	  (singular-get-old-input, singular-send-or-copy-input): slightly
	  rewritten

	* singular.el (singular-demo-chunk-regexp,
	  singular-demo-print-messages, singular-demo-exit-on-load,
	  singular-demo-load-directory): `:initialize' tags added

	* singular.el: folding `Skipping and stripping prompts and
	  newlines ...' completely rewritten.  Almost all variables
	  and constants removed.  Functions and variables renamed:

	  singular-skip-prompt-forward to singular-prompt-skip-forward
	  singular-skip-prompt-backward to singular-prompt-skip-backward
	  singular-strip-leading-prompt to singular-prompt-remove-string
	  singular-remove-prompt to singular-prompt-remove-region
	  singular-remove-prompt-filter to singular-prompt-remove-filter
	  singular-strip-white-space to singular-white-space-strip
	  singular-prompt-regexp to singular-comint-prompt-regexp

	  All references changed.  New function `singular-prompt-init'
	  added which is called in `singular-interactive-mode'

	* .emacs-singular: loads customization from ~/.emacs-singular-cust
	  if present

	* .emacs-singular: loads singular.el from
	  `singular-emacs-home-directory'

	* .emacs-singular: code added to remove "Load .emacs" menu entry
	  on XEmacs

	* .emacs-singular: doc fixes

	* .bashrc: variables `singular-emacs-home-directory' and
	  `singular-help-file-name' added to commandlines

1999-08-18  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>
        * singular.el singular-help-file-name variable introduced
	  added section for singular-*-alists
	  some defvars changed to defconsts
	  (singular-scan-header-exit) introduced
	  fancier calculation of singular-scan-header-scan-for
	  (singular-scan-header-got-emacs-home) introduced
	  singular-executable-default, ... are now defcustom
	  (singular-exit-sentinel) now call (singular-scan-header-exit)

	* singular.el: added (singular-comint-init)
	  improved dynamical generation of library menu
	  scan header functionality improved
	  scan header now gets initialized on every start of Singular
	  singular-completion-* variables renamed
	  (singular) renamed to (singular-internal)
	  new functions (singular), (singular-restart), (singular-other)
	  new variables for last singular arguments incl. history

1999-08-15  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: new folding `Sending input interactive'.  Functions
	  `singular-get-old-input' and `singular-send-or-copy-input' moved
	  to that folding.

	* singular.el: folding `Skipping and stripping prompts and
	  newlines ...' renamed to `Skipping and stripping prompts and
	  whitespace ...'

	* singular.el (singular-interactive-mode): slightly re-organized

	* singular.el (singular-demo-show-next-chunk): bug fix

	* singular.el (singular-section-kill): new function
	  (singular-interactive-mode-map): key binding added for the
	  aforementioned function

	* singular.el (singular-section-to-string): renamed from
	  `singular-input-section-to-string'.  Optional argument END
	  removed.  All callers changed.

	* singular.el (singular-section-check): new function
	  singular.el (singular-folding-fold, singular-folding-unfold):
	  use `singular-section-check'

1999-08-11  T. Wichmann  <wichmann@arboretum.itwm.uni-kl.de>

	* singular.el: code for menu support rewritten
	  scanning of singular header implemented
	  dynamic completion implemented

1999-08-10  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-history-insert): does not check
	  `singular-demo-insert-into-history' any longer
	  (singular-demo-insert-into-history): variable removed

1999-08-09  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: doc fixes

1999-08-08  Jens Schmidt  <schmidt@de.oracle.com>

	* .emacs (singular-interactive-mode-hook): key bindings for
	  scrolling commands changed

	* singular.el (singular-current-output-section): bug fix.
	  `save-restriction' added.

	* singular.el (singular-folding-toggle-fold-latest-output):
	  completely rewritten
	  (singular-folding-toggle-fold-at-point,
	  singular-folding-toggle-fold-all-output): removed
	  (singular-folding-toggle-fold-at-point-or-all): new function

	* singular.el (singular-folding-fold): checks that section is
	  unfolded before folding
	  (singular-folding-unfold): checks that section is folded before
	  unfolding.  Uses optional argument
	  INVISIBILITY-OVERLAY-OR-EXTENT.

	* singular.el (singular-xemacs-folding-unfold-internal): assumes
	  that section is folded and uses optional argument
	  INVISIBILITY-EXTENT
	  (singular-xemacs-folding-fold-internal): assumes that section is
	  unfolded
	  (singular-emacs-folding-fold-internal,
	  singular-emacs-folding-unfold-internal):  same changes as for
	  XEmacs

	* singular.el (singular-xemacs-folding-foldedp-internal,
	  singular-emacs-folding-foldedp-internal):  cosmetical changes

	* singular.el (singular-font-lock-singular-types): initialization
	  moved out of `defconst' for Byte Compiler to recognize

	* singular.el (singular-keep-region-active): new function
	  (singular-section-goto-beginning, singular-section-goto-end,
	  singular-section-backward, singular-section-forward): calls to
	  that function added

	* singular.el: new folding `Miscellaneous' in folding `Code common
	  to both modes' added

	* singular.el: Folding `Simple section stuff ...' and `Section
	  stuff' renamed to `Simple section API ...' and `Section API',
	  respectively.  New foldings `Section miscellaneous' and `Section
	  miscellaneous interactive'.  Folding `Getting section contents'
	  removed, contents moved to `Section miscellaneous'.  Folding
	  `Input and output filters' removed, contents moved to `Skipping
	  and stripping ...'.
	* singular.el.decl: changed accordingly

	* singular.el.decl: docu on access specifiers and types added,
	  declarations re-checked and updated.

1999-08-07  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: preliminary and experimental version of online help
	  stuff added

	* singular.el: doc fixes.  I almost forgot about them.

	* singular.el (singular-time-stamp-difference): new function

	* singular.el (singular-interactive-mode-map): bindings added for
	  `singular-folding-toggle-fold-at-point',
	  `singular-folding-toggle-fold-latest-output', and
	  `singular-folding-toggle-fold-all-output'
	* singular.el (singular-folding-unfold): new function
	  (singular-folding-toggle-fold-at-point,
	  singular-folding-toggle-fold-latest-output,
	  singular-folding-toggle-fold-all-output): new functions

	* singular.el (singular-interactive-mode-map): bindings added for
	  `comint-previous-matching-input' and
	  `comint-next-matching-input'

1999-08-01  Jens Schmidt  <schmidt@de.oracle.com>

	* .emacs (singular-interactive-mode-hook): Font Lock mode turned
	  on for Singular interactive mode

	* .emacs (singular-interactive-mode-hook): key-bindings added

1999-07-31  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: `Skipping and stripping prompts and newlines and
	  other things' moved

	* singular.el (singular-exit-sentinel): bug fix.

	* singular.el (singular-prompt-skip-forward): renamed from
	  `singular-prompt-skip-forward'.  All references replaced.

	* singular.el (singular-history-ignoredups, singular-history-size,
	  singular-history-filter-regexp,
	  singular-history-explicit-file-name): new defcustoms
	  (singular-history-read, singular-history-write,
	  singular-history-insert, singular-history-init): new functions.
	  Calls added to the necessary functions.

	* singular.el: new folding `Miscellaneous interactive' introduced

	* singular.el (singular-recenter,
	  singular-reposition-point-and-window): new functions
	  (singular-toggle-truncate-lines): uses
	  `singular-reposition-point-and-window' instead of recenter
	  (singular-scroll-previous-amount): new variable
	  (singular-scroll-right, singular-scroll-left): new variables

	* singular.el (singular-process, singular-process-mark): accept
	  optional argument NO-ERROR now and throw an error if Singular is
	  not alive
	  (singular-load-file, singular-load-library): rely on errors from
	  `singular-process' to catch dead processes

	* singular.el (singular-buffer-name-to-process-name,
	  singular-process-name-to-buffer-name,
	  singular-run-hook-with-arg-and-value, singular-process,
	  singular-process-mark): declared as `defsubst'

	* singular.el: almost all key bindings thrown out.  Needs to be
	  re-designed.

	* singular.el: more doc fixes

	* singular.el: doc fixes and cosmetical changes

1999-07-29  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: Folding `Last input and output section' moved

	* singular.el.decl: changes from singular.el included

	* singular.el (singular-demo-load): uses
	  `singular-demo-load-directory' to load files
	  (singular-demo-load): behaviour on running new demo if there is
	  old one made customizable
	  (singular-demo-load): bug fix for Emacs which moves pointers on
	  file insertion

	* singular.el (singular-demo-command-on-enter,
	  singular-demo-command-on-leave): variables removed.  Instead,
	  hooks are run now in `singular-demo-exit-internal' and
	  `singular-demo-load'.

	* singular.el (singular-demo-mode): function disolved to a number
	  of smaller functions.  See below.
	  (singular-demo-exit-internal): new function
	  (singular-demo-exit): completely rewritten

	* singular.el (singular-demo-show-next-chunk): bug fix in white
	  space stripping at end of demo

	* singular.el (singular-demo-mode-init): new function.  Call added
	  to `singular-interactive-mode'.

	* singular.el (singular-demo-chunk-regexp): made a defcustom
	  (singular-demo-insert-into-history): new custom
	  (singular-demo-print-messages): made a defcustom
	  (singular-demo-exit-on-load): new custom
	  (singular-demo-load-directory): new custom

	* singular.el (singular-interactive-mode): sets `comint-mode-hook'
	  to nil before calling `comint-mode'
	  (singular-exec): does not run hooks on `comint-exec-hook' any
	  longer

	* singular.el: new folding for Comint stuff
	  folding `Customizing variables of comint' removed
	  folding `History' added

	* singular.el (singular-demo-mode): new group

	* singular.el: doc fixes

1999-07-25  Jens Schmidt  <schmidt@de.oracle.com>

	* .emacs (transient-mark-mode): switched on

	* singular.el.decl: all foldings updated to revision 1.38.
	  Section stuff and Key map revised.

	* singular.el: doc fixes and cosmetical changes

1999-07-25-b  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: Key binding stuff almost completely rewritten.
	  Features now: new customs `singular-history-keys',
	  `singular-cursor-keys' and back-end functions
	  `singular-history-cursor-keys-set' and
	  `singular-history-cursor-key-set'.  New function
	  `singular-interactive-mode-map-init' added and call to that
	  function in `singular-interactive-mode'.  Key map does not
	  inherit keymap from `comint-mode' any longer.  New prefix maps
	  used.

	* singular.el (singular-demo-load): uses
	  `insert-file-contents-literally' now

	* singular.el (singular-section-goto-beginning,
	  singular-section-goto-end, singular-section-backward,
	  singular-section-forward: new functions

	* singular.el (singular-section-face-alist,
	  singular-folding-ellipsis,
	  singular-folding-line-move-ignore-folding): cosmetical changes

	* singular.el: menu and logo stuff moved to respective folding
	  (singular-interactive-mode-menu-init): new function
	  (singular-interactive-mode): call to that function added

	* singular.el (singular-interactive-font-lock-defaults):
	  SYNTAX-BEGIN set to `singular-section-goto-beginning'

	* singular.el (singular-interactive-miscellaneous): new group
	* singular.el (singular-map-buffer): moved to Customization
	  folding

	* singular.el: doc fixes

	* .emacs (singular-cursor-keys, singular-history-keys): settings
	  added

	* .emacs: work around for face problems on XEmacs added

1999-07-25-a  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-section-face-alist,
	  singular-section-input-face, singular-section-output-face): new
	  customs

	* singular.el (singular-emacs-simple-sec-in,
	  singular-section-mapsection): rewritten.  Much more beautiful
	  now

	* singular.el: doc fixes

1999-07-24  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-debug-pre-input-filter,
	  singular-debug-post-input-filter,
	  singular-debug-pre-output-filter,
	  singular-debug-post-output-filter): cosmetical changes
	  (singular-debug-filter-init): new function.
	  (singular-interactive-mode): calls that function instead of
	  initializing the filters on itself

	* .bashrc: new file

	* .emacs (custom-file): set

	* .emacs: loads and starts Singular interactive mode

	* .emacs-customize: renamed to .emacs

1999-07-24-b  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: Font Lock mode support completely re-written:
	  Faces defined with `defface', regular expressions simplified,
	  call to `regexp-opt' added, `eval-when-compile' hack included,
	  doc strings re-written to official wording, function
	  `singular-interactive-font-lock-init' added, everything (except
	  faces) renamed to prefix "singular-interactive-font-lock", etc.

	* singular.el (singular-simple-sec-lookup-face): new subst.  Calls
	  added in `singular-emacs-simple-sec-create' and
	  `singular-xemacs-simple-sec-create'
	  (singular-section-face-alist): new custom
	  (singular-section-input-face, singular-section-input-face): new
	  faces

	* singular.el: doc fixes

	* .emacs-customize (show-paren-mode): new file

1999-07-24-a  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-xemacs-simple-sec-create): slightly
	  rewritten
	  (singular-xemacs-simple-sec-start-at): Handles imagenary clear
	  simple section at eob correctly now
	  (singular-xemacs-simple-sec-end-at,
	  singular-xemacs-simple-sec-at): cosmetical changes
	  (singular-xemacs-simple-sec-in): completely rewritten

	* singular.el (singular-faces, singular-sections-and-foldings):
	  new groups
	* singular.el (singular-folding-ellipsis,
	  singular-folding-line-move-ignore-folding): moved to group
	  `singular-sections-and-foldings'

	* singular.el: doc fixes, of course

1999-07-23  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-folding-fold-at-point,
	  singular-folding-unfold-at-point,
	  singular-folding-fold-latest-output,
	  singular-folding-unfold-latest-output,
	  singular-folding-fold-all-output,
	  singular-folding-unfold-all-output): (re-)new functions

	* singular.el (singular-folding-fold): accepts optional argument
	  NO-ERROR

	* singular.el (singular-folding-line-move-ignore-folding): new
	  defcustom

	* singular.el (singular-section-mapsection): new function

	* singular.el (singular-map-buffer): new function

	* singular.el (singular-folding-init): adapted to XEmacs
	  (singular-xemacs-folding-fold-internal,
	  singular-xemacs-folding-foldedp-internal,
	  singular-xemacs-folding-unfold-internal): new functions

	* singular.el: doc fixes (what else?)

1999-07-22  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el-07-22 (singular-emacs-folding-fold-internal): bug
	  fix

	* singular.el-07-22 (singular-folding-ellipsis): sets ellipsis in
	  already running Singulars
	  (singular-folding-set-ellipsis-in-singular-buffers,
	  singular-folding-set-ellipsis): new
	  functions

	* singular.el-07-22 (singular-section-in): restriction algorithm
	  changed.  Restricts to whole sections now.
	  (singular-section-in-internal): new function used by
	  `singular-section-in'

	* singular.el-07-22 (singular-emacs-simple-sec-in): bug fix

	* singular.el-07-22: doc fixes, of course

1999-07-19  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el: Folding stuff completely rewritten.
	  (singular-interactive-mode): Folding stuff initialization moved
	  to new function `singular-folding-init'

	* singular.el (singular-process, singular-process-mark,
	  singular-simple-sec-last-end-position): bug fixes

	* singular.el (singular-interactive): new group

	* singular.el: face initialization for XEmacs slightly
	  re-organized

	* singular.el (singular-mode-syntax-table-init): new function.
	  Called from `singular-interactive-mode'.

	* singular.el: doc fixes, of course.

1999-07-18-a  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-section-in): completely rewritten.
	  Handles restrictions now.

	* singular.el (singular-section-at): handles degenerate
	  restriction cases correctly now

	* singular.el (singular-section-simple-sec, singular-section-type,
	  singular-section-start, singular-section-end): defined as subst

	* singular.el (singular-section-create): new subst.  Used in all
	  instances where new sections are generated.

	* singular.el: A number of changes in the XEmacs simple section
	  stuff.  However, there are still some changes from the Emacs
	  simple section stuff that have to be re-done for the XEmacs
	  stuff, too.

	* singular.el (singular-emacs-simple-sec-in): implemented

	* singular.el (singular-simple-sec-end,
	  singular-simple-sec-start, singular-simple-sec-type,
	  singular-simple-sec-before): defined as subst

	* singular.el (singular-emacs-simple-sec-create): slightly
	  rewritten.  Should be a little bit faster now.

	* singular.el (singular-simple-sec-reset-last,
	  singular-xemacs-simple-sec-reset-last,
	  singular-emacs-simple-sec-reset-last): removed

	* singular.el (singular-simple-sec-last-end-position): new macro.
	  Used whenever position of last simple section is accessed.

	* singular.el (singular-input-section-to-string): cosmetical
	  changes

	* singular.el (singular-mode-syntax-table): (my own) bug fixed in
	  initialization

	* singular.el: doc fixes.  A *lot* of doc fixes.

1999-07-17  Jens Schmidt  <schmidt@de.oracle.com>

	* singular.el (singular-load-file, singular-load-library): checks
	  added whether process is running

	* singular.el (singular-interactive-mode-map): settings for
	  singular-demo-exit uncommented.  Does not work on Emacs.

	* singular.el (font-lock-singular-prompt-face): bug fix.  Was
	  font-lock-singular-warn-face.

	* singular.el (singular-interactive-mode-syntax-table,
	  singular-mode-syntax-table): renamed and moved to common code
	  section, same for initialization of syntax table
	  (singular-mode-syntax-table): back tics added as strings

	* singular.el (singular-fset): support for Emacs 19 removed
	  (singular-set-version): ditto

	* singular.el: doc fixes

1998-08-14  T. Wichmann  <wichmann@itwm.uni-kl.de>

	* singular.el : commented code for singular-logo on startup in
	XEmacs. This code needs some rethinking...

1998-08-10  T. Wichmann  <wichmann@itwm.uni-kl.de>

	* singular.el (singular-toggle-truncate-lines): Added (recenter)
	according to function definition in XEmacs.
	(singular-other): Added check on unique buffer name.
	Added comments to functions and variables.

1998-08-07  T. Wichmann  <wichmann@itwm.uni-kl.de>
	*singular (singular-send-or-copy-input): Print message if demo
	mode is active
	Added variable singular-demo-mode-print-messages

	* singular.el (singular-demo-mode): changed message text
	(singular-other): if singular options are read from minibuffer, do
	not display the "-t" option. Add it automatically.
	(singular-other): Changed minibuffer text
	(singular-exit-singular): Added (kill-buffer)

	* singular.el (singular-do-folding): Added (recenter) to prevent
	error in subst-char-in-region. Temporary?

	* singular.el (singular-other): Added

1998-08-06  T. Wichmann  <wichmann@itwm.uni-kl.de>

        * singular.el: added key-bindings
	Introduced new variable singular-start-menu (temporary)
	Updated submenu "load library"

        * singular.el: set-face for new font-lock faces now uses argument
	'append for XEmacs
	Changed (get-buffer-process (cur...)) to (singular-process)
	(singular-demo-mode): added message on enter

	* singular.el (singular-emacs-simple-sec-start-at): Removed error:
       	(point) was used instead of pos
	(singular-emacs-simple-sec-end-at): Removed error: (point) was
	used instead of pos

	* singular.el (singular-interactive-mode-syntax-table): Added
	additional entries

	* singular.el (singular-font-lock-keywords-1): Added new regexps
	(font-lock-singular-error-face): Added new face
	(font-lock-singular-warn-face): Added new face
	(font-lock-singular-prompt-face): Added new face

	*singular.el: set-face for section faces put in comments

	* singular.el (singular-xemacs-simple-sec-in): Written
	(singular-section-in): Written
	(singular-do-folding): Finished

Thu Jul 30 11:45:28 1998  Jens Schmidt  <schmidt@mathematik.uni-kl.de>

	* singular.el (singular-process): new macro

	* singular.el (singular-demo-command-on-enter,
	  singular-demo-command-on-exit): new variables
 	  (singular-demo-mode): sends commands on entering and exiting

	* singular.el (singular-demo-mode-init): function removed.
	  Functionality moved to `singular-demo-mode'.
	  (singular-demo-mode): more versatile.  Knows how to enter and to
	  exit, too.  All callers adapted.
	  (singular-demo-exit): new function
	  (singular-demo-show-next-chunk): leaves demo mode after showing
	  last chunk
	  (singular-demo-load): does not show first chunk on startup

	* singular.el (singular-remove-prompt-regexp): new variable
	  (singular-remove-prompt): new function

	* singular.el (singular-string-start-anchored-prompt-regexp):
	  renamed to `singular-strip-leading-prompt-regexp'
	  (singular-strip-prompts): renamed to
	  `singular-strip-leading-prompt'
	  (singular-prompt-sequence-regexp): renamed to
	  `singular-skip-prompt-forward-regexp'

	* singular.el (singular-fold-internal): bug fix.  Keeping undo
	  information not up-to-date leads to a corrupt undo list.
	  (singular-demo-show-next-chunk): ditto
	  (singular-exit-sentinel): switches off demo mode on exit

1998-07-31  T. Wichmann  <wichmann@itwm.uni-kl.de>

	* singular.el: simple-secs for XEmacs, second version

1998-07-29  T. Wichmann  <wichmann@itwm.uni-kl.de>

	* singular.el : simple-secs for XEmacs partially implemented

Wed Jul 29 10:50:47 1998  Jens Schmidt  <schmidt@mathematik.uni-kl.de>

	* singular.el (singular-extended-prompt-regexp,
	  singular-string-start-anchored-prompt-regexp,
	  singular-prompt-sequence-regexp): new constants
	  (singular-strip-white-space, singular-strip-prompts,
	  singular-skip-prompt-forward): new functions

	* singular.el (singular-emacs-simple-sec-end-at): bug fix
	  (singular-fold-internal, singular-demo-show-next-chunk): do not
	  save buffer-modified flag and do not switch off read only state
	  (singular-output-filter): does not switch off read only state
	  (singular-input-section-to-string): new function

	* singular.el (singular-send-input): sends old input sections
	  (singular-send-input): renamed to
	  `singular-send-or-copy-input'.  All references changed.
	  (singular-get-old-input): new function

	* singular.el (singular-demo-end): new variable
	  (singular-demo-mode-init, singular-interactive-mode): new
	  function.  Call added in mode initialization.
	  (singular-demo-load): sets `singular-demo-end'
	  (singular-demo-show-next-chunk): is smarter concerning end of
	  demo file

	* singular.el (singular-demo-chunk-regexp): new variable
	  (singular-demo-mode, singular-demo-old-mode-name,
	  singular-interactive-mode): new local variables.  Localization
	  added.
	  (singular-demo-mode, singular-demo-show-next-chunk,
	  singular-demo-load): new function
	  (singular-send-input): supports demo mode

	* singular.el (singular-fold-internal, singular-fold-section):
	  again takes only a single region instead of a list.  All callers
	  changed.

	* singular.el (singular-fold-section): doc fix
	  (singular-exec): takes care about undo information when
	  retrieving start file
	  (singular-emacs-simple-sec-before): doc fix
	  (singular-exec): cosmetic changes
	  (singular-output-filter): cosmetic changes
	  (singular-simple-sec-last-end): doc fix
	  (singular-send-input): argument STRING changed to
	  SEND-FULL-SECTION.  Semantics not implemented yet.

	* singular.el (singular-section-before): new function

Tue Jul 28 08:49:05 1998  Jens Schmidt  <schmidt@mathematik.uni-kl.de>

	* singular.el (singular-emacs-simple-sec-start-at,
	  singular-emacs-simple-sec-end-at):  assume that buffer is
	  already widened
	  (singular-section-at): widens buffer before determining start
 	  and end of clear simple sections

	* singular.el (singular-fold-section): doc fix
	  (singular-emacs-simple-sec-create): doc fix
	  (singular-simple-sec-last-end): doc fix
	  explanations for sections and simple sections added

	* singular.el (singular-fold-internal, singular-fold-section):
	  uses a list of regions instead of one region.  All callers
 	  changed.

	* singular.el (singular-fold-internal): doc fix
	  (singular-section-foldedp): doc fix
	  (singular-fold-section): saves restrictions before folding

	* singular.el (singular-section-at): argument `raw-section'
	  renamed to `restricted' and its semantic inverted

	* singular.el (singular-emacs-simple-sec-start-at,
	  singular-emacs-simple-sec-end-at): new functions.  `fset's for
 	  the flavor-independent functions added.

	* singular.el (singular-emacs-simple-sec-reset-last): new argument
	  `pos'.  Resets `singular-simple-sec-last-end', too.
	  (singular-output-filter): does not set
	  `singular-simple-sec-last-end'

	* singular.el (singular-simple-sec-last-end): new variable
	  (singular-debug-format): wrapped by a `save-match-data'
	  (singular-simple-sec-clear-type): doc fix
	  (singular-emacs-simple-sec-create): doc fix
	  (singular-emacs-simple-sec-create): cosmetic changes
	  (singular-fold-internal): cosmetic changes
	  (singular-fold-internal): bug fix.  Order of `delete-char' and
	  `subst-char-in-region' exchanged.

	* singular.el (singular-section-at): new function
	  (singular-section-simple-sec, singular-section-start,
	  singular-section-end, singular-section-type): new macros

	* singular.el (singular-fold-internal, singular-fold-section,
	  singular-section-foldedp): new functions

	* singular.el (singular-output-filter): sets `inhibit-read-only'
	  instead of `buffer-read-only'

	* singular.el (singular-simple-sec-clear-type): new variable
	  (singular-simple-sec-init): new function
	  (singular-emacs-simple-sec-create,
 	  singular-emacs-simple-sec-reset-last,
 	  singular-emacs-simple-sec-start, singular-emacs-simple-sec-end,
 	  singular-emacs-simple-sec-type, singular-emacs-simple-sec-at,
 	  singular-emacs-simple-sec-before, singular-emacs-simple-sec-in
 	  ): new functions.  `fset's for the flavor-independent functions
	  added.

Mon Jul 27 12:39:04 1998  Jens Schmidt  <schmidt@mathematik.uni-kl.de>

	* singular.el (singular-output-filter): new function
	  (singular-send-input): new function
	  (singular-interactive-mode-map): `singular-send-input' bound to
	  `"\C-m"'

	* singular.el (singular-debug-input-filter,
	  singular-debug-output-filter):  completely rewritten.  Bogus
	  call counting removed.  Debug checks added.
	  (singular-debug-bogus-output-filter-cnt): variable removed

	* singular.el (singular): code for creation of new singular
	  process moved to `singular-exec'
	  (singular-exec): new function

	* singular.el (singular-process-mark): new macro
	  (singular-exit-sentinel): debug message fix
	  (singular): arguments names changed
	  (singular-set-version): message fix
	  (singular-bogus-output-filter-calls): variable removed
	  (singular-debug): optional argument `else-form' added
	  (singular-debug-format): uses `replace-match' to replace
	  newlines

	* singular.el (singular-folding-ellipsis): new variable
	  (singular-interactive-mode): selective display stuff added

	* singular.el (singular-input-face, singular-output-face): new
	  variables
	  (singular-lookup-face): new function

Thu Jul 23 10:28:53 1998  Jens Schmidt  <schmidt@mathematik.uni-kl.de>

	* singular.el (singular): initializes the markers
	  `comint-last-input-start', `comint-last-input-end', and
	  `comint-last-output-start'
	  (singular): goes to point max after Singular startup

	* singular.el (singular-interactive-mode):
	  `comint-truncate-buffer' is not longer added unconditionally to
	  `comint-output-filter-functions'
	  (singular): runs `comint-exec' instead of `make-comint'

	* singular.el (comint-mode): advice removed
	  (singular-interactive-mode): `comint-mode' is called now in a
	  more regular way

	* singular.el (singular-debug-output-filter): doc fix

	* singular.el (singular-bogus-output-filter-calls): new variable

	* singular.el (singular-interactive-mode-map): code for XEmacs
	  added

	* singular.el (singular-emacs-flavor,
	  singular-emacs-major-version, singular-emacs-minor-version): new
 	  variables
	  (singular-set-version, singular-fset): new functions

	* singular.el (singular-debug-format): new function
	  (singular-debug-bogus-output-filter-cnt): new variable
	  (singular-debug-input-filter, singular-debug-output-filter): new
	  variables
	  (singular-interactive-mode): conditionally adds debugging
	  filters

	* singular.el: style and coding conventions added

Wed Jul 22 11:45:56 1998  Jens Schmidt  <schmidt@mathematik.uni-kl.de>

	* singular.el (singular-interactive-mode):
	  `comint-truncate-buffer' is added to `comint-truncate-buffer'
	  via a local `add-hook'
	  (singular-interactive-mode): doc fix
	  (singular-interactive-mode): `mode-name' fixed
	  (singular): doc fix

	* singular.el (comint-mode): new advice
	  `singular-interactive-mode'
	  (singular-interactive-mode): call to `comint-mode' re-added
	  (singular-interactive-mode): call to `comint-read-input-ring'
	  moved to `singular'
	  (singular): almost completely rewritten.  Runs
	  `singular-interactive-mode' only on creation of a new buffer.
	  Runs hooks on `singular-exec-hook'.  Reads input ring on
	  creation of a new process.

	* singular.el (singular-prompt-regexp): doc fix
	  (singular-input-ignoredups, singular-maximum-buffer-size):
	  unmade customizable

	* singular.el (singular-history-filter-regexp): new variable
	  (singular-history-filter): new variable
	  (singular-interactive-mode): sets `comint-input-filter' to
	  `singular-history-filter'

	* singular.el (singular-interactive-mode): adds
	  `comint-truncate-buffer' to `comint-output-filter-functions'.
	  `singular-buffer-maximum-size' unmade buffer local.

	* singular.el (singular-interactive-mode): does not run
	  `comint-mode'.  Mode name changed to `"Singular Interactive".

	* singular.el (singular-debug): doc fix
	  (singular-debug): recognition of mode `all' added
	  (singular-interactive-mode): `singular-debug' unmade buffer
	  local

	* singular.el (singular-exit-sentinel): debug messages added

	* singular.el (singular-start-file): doc fix
	  (singular-default-executable, singular-default-name,
	  singular-default-switches): doc fix
	  (singular, singular-interactive-mode): doc fix
	  (singular-delimiter-argument-list, singular-input-ignoredups,
	  singular-buffer-maximum-size, singular-input-ring-size): doc fix
