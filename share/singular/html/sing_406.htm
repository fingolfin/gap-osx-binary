<HTML>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- Created on March, 4  2015 by texi2html 1.65 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Olaf Bachmann <obachman@mathematik.uni-kl.de>
Send bugs and suggestions to <texi2html@mathematik.uni-kl.de>

-->
<HEAD>
<TITLE>Singular Manual: system</TITLE>

<META NAME="description" CONTENT="Singular Manual: system">
<META NAME="keywords" CONTENT="Singular Manual: system">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="texi2html 1.65">

</HEAD>

<BODY LANG="EN"  BACKGROUND="Mybg.gif">

<A NAME="SEC445"></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR VALIGN="TOP">
<TD ALIGN="LEFT">
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_405.htm#SEC444"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: subst" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_407.htm#SEC446"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: syz" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_258.htm#SEC297"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: Functions and system variables" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_425.htm#SEC464"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Control structures" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_259.htm#SEC298"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: Functions" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR>
</TABLE>
</TD>
<TD ALIGN="LEFT">
<H3> 5.1.147 system </H3>
<!--docid::SEC445::-->
<DL COMPACT>
<DT><CODE><STRONG>Syntax:</STRONG></CODE>
<DD><CODE>system (</CODE> string_expression <CODE>)</CODE>
<BR><CODE>system (</CODE> string_expression<CODE>,</CODE> expression <CODE>)</CODE>
<DT><CODE><STRONG>Type:</STRONG></CODE>
<DD>depends on the desired function, may be none
<DT><CODE><STRONG>Purpose:</STRONG></CODE>
<DD>interface to internal data and the operating system. The
string_expression determines the command to execute. Some commands
require an additional argument (second form) where the type of the
argument depends on the command. See below for a list of all possible
commands.
<DT><CODE><STRONG>Note:</STRONG></CODE>
<DD>Not all functions work on every platform.
<DT><CODE><STRONG>Functions:</STRONG></CODE>
<DD><DL COMPACT>
<DT><CODE>system("absFact",</CODE> poly <CODE>)</CODE>
<DD><A NAME="IDX185"></A>
absolute factorization of the polynomial
(from a polynomial ring over a transzedental extension)
Returns a list of the ideal of the factors, intvec of multiplicities,
ideal of minimal polynomials and the bumber of factors.
<DT><CODE>system("blackbox")</CODE>
<DD><A NAME="IDX186"></A>
list all blackbox data types.
<DT><CODE>system("browsers");</CODE>
<DD><A NAME="IDX187"></A>
<A NAME="IDX188"></A>
<A NAME="IDX189"></A>
<A NAME="IDX190"></A>
returns a string about available help browsers.
See  <A HREF="sing_16.htm#SEC22">The online help system</A>.
<DT><CODE>system("bracket",</CODE> poly, poly <CODE>)</CODE>
<DD><A NAME="IDX191"></A>
<A NAME="IDX192"></A>
returns the Lie bracket [p,q].
<DT><CODE>system("btest",</CODE> poly, i2 <CODE>)</CODE>
<DD><A NAME="IDX193"></A>
internal for shift algebra (with i2 variables): last block of the poly
<DT><CODE>system("complexNearZero",</CODE> number_expression <CODE>)</CODE>
<DD><A NAME="IDX194"></A>
checks for a small value for floating point numbers
<DT><CODE>system("contributors")</CODE>
<DD><A NAME="IDX195"></A>
<A NAME="IDX196"></A>
returns names of people who contributed to the S<SMALL>INGULAR</SMALL> kernel as string.
<DT><CODE>system("cpu")</CODE>
<DD><A NAME="IDX197"></A>
<A NAME="IDX198"></A>
returns the number of cpus as int (for creating multiple threads/processes).
(see <CODE>system("--cpus")</CODE>).
<DT><CODE>system("denom_list")</CODE>
<DD><A NAME="IDX199"></A>
<A NAME="IDX200"></A>
returns the list of denominators (number) which occured in the latest std
computationi(s).
Is reset to the empty list at ring changes or by this system call.
<DT><CODE>system("eigenvals",</CODE> matrix <CODE>)</CODE>
<DD><A NAME="IDX201"></A>
returns the list of the eigenvalues of the matrix (as ideal, intvec).
(see <CODE>system("hessenberg")</CODE>).
<DT><CODE>system("env",</CODE> ring <CODE>)</CODE>
<DD><A NAME="IDX202"></A>
<A NAME="IDX203"></A>
returns the enveloping algebra (i.e. R tensor R^opp)
See <CODE>system("opp")</CODE>.
<DT><CODE>system("freegb",</CODE> ideal, i2, i3 <CODE>)</CODE>
<DD><A NAME="IDX204"></A>
returns the standrda basis in the shift algebra i(with i3 variables) up to degree i2.
See <CODE>system("opp")</CODE>.
<DT><CODE>system("getenv",</CODE> string_expression<CODE>)</CODE>
<DD><A NAME="IDX205"></A>
<A NAME="IDX206"></A>
returns the value of the shell environment variable given as the second
argument. The return type is string.
<DT><CODE>system("getPrecDigits")</CODE>
<DD><A NAME="IDX207"></A>
returns the precision for floating point numbers
<DT><CODE>system("gmsnf",</CODE> ideal, ideal, matrix,int, int <CODE>)</CODE>
<DD><A NAME="IDX208"></A>
Gauss-Manin system: for gmspoly.lib, gmssing.lib
<DT><CODE>system("HC")</CODE>
<DD><A NAME="IDX209"></A>
returns the degree of the "highest corner" from the last
std computation (or 0).
<DT><CODE>system("hessenberg",</CODE> matrix <CODE>)</CODE>
<DD><A NAME="IDX210"></A>
<A NAME="IDX211"></A>
returns the Hessenberg matrix (via QR algorithm).
<DT><CODE>system("install",</CODE> s1, s2, p3, i4 <CODE>)</CODE>
<DD><A NAME="IDX212"></A>
install a new method p3 for s2 for the newstruct type s1.
s2 must be a reserved operator with i4 operands
(i4 may be 1,2,3; use 4 for more than 3 or a varying number of arguments)
See See  <A HREF="sing_181.htm#SEC220">Commands for user defined types</A>.
<DT><CODE>system("LLL",</CODE> B <CODE>)</CODE>
<DD><A NAME="IDX213"></A>
<A NAME="IDX214"></A>
B must be a matrix or an intmat.
Interface to NTLs LLL (Exact Arithmetic Variant over ZZ).
Returns the same type as the input.<BR>
B is an m x n matrix, viewed as m rows of n-vectors.  m may be less
than, equal to, or greater than n, and the rows need not be
linearly independent.  B is transformed into an LLL-reduced basis.
The first m-rank(B) rows of B are zero.<BR>
More specifically, elementary row transformations are performed on
B so that the non-zero rows of new-B form an LLL-reduced basis
for the lattice spanned by the rows of old-B.
<DT><CODE>system("nblocks")</CODE> or <CODE>system("nblocks",</CODE> ring_name <CODE>)</CODE>
<DD><A NAME="IDX215"></A>
<A NAME="IDX216"></A>
returns the number of blocks of the given ring, or
of the current basering, if no second argument is given. The return type
is int.
<DT><CODE>system("newstruct")</CODE>
<DD><A NAME="IDX217"></A>
list all newstruct data types.
<DT><CODE>system("opp",</CODE> ring <CODE>)</CODE>
<DD><A NAME="IDX218"></A>
<A NAME="IDX219"></A>
<A NAME="IDX220"></A>
returns the opposite ring.
<DT><CODE>system("oppose",</CODE> ring R, poly p <CODE>)</CODE>
<DD><A NAME="IDX221"></A>
<A NAME="IDX222"></A>
<A NAME="IDX223"></A>
returns the opposite polynomial of p from R.
<DT><CODE>system("pcvLAddL",</CODE> list, list <CODE>)</CODE>
<DD><A NAME="IDX224"></A>
<CODE>system("pcvPMulL",</CODE> poly, list <CODE>)</CODE>
<A NAME="IDX225"></A>
<BR><CODE>system("pcvMinDeg",</CODE> poly <CODE>)</CODE>
<A NAME="IDX226"></A>
<BR><CODE>system("pcvP2CV",</CODE> list, int, int <CODE>)</CODE>
<A NAME="IDX227"></A>
<BR><CODE>system("pcvCV2P",</CODE> list, int, int <CODE>)</CODE>
<A NAME="IDX228"></A>
<BR><CODE>system("pcvDim",</CODE> int, int <CODE>)</CODE>
<A NAME="IDX229"></A>
<BR><CODE>system("pcvBasis",</CODE> int, int <CODE>)</CODE>
<A NAME="IDX230"></A>
internal for mondromy.lib
<DT><CODE>system("pid")</CODE>
<DD><A NAME="IDX231"></A>
<A NAME="IDX232"></A>
returns the process number as int (for creating unique names).
<DT><CODE>system("random")</CODE> or <CODE>system("random",</CODE> int <CODE>)</CODE>
<DD><A NAME="IDX233"></A>
<A NAME="IDX234"></A>
<A NAME="IDX235"></A>
returns or sets the seed of the random generator.
<DT><CODE>system("reserve",</CODE> int <CODE>)</CODE>
<DD><A NAME="IDX236"></A>
reserve a port and listen with the given backlog.
(see <CODE>system("reservedLink")</CODE>).
<DT><CODE>system("reservedLink")</CODE>
<DD><A NAME="IDX237"></A>
accept a connect at the reserved port and return a (write-only) link to it.
(see <CODE>system("reserve")</CODE>).
<DT><CODE>system("semaphore",</CODE> string, int <CODE>)</CODE>
<DD><A NAME="IDX238"></A>
<A NAME="IDX239"></A>
operations for semaphores: string may be
<CODE>"init"</CODE>,
<CODE>"exists"</CODE>,
<CODE>"acquire"</CODE>,
<CODE>"try_acquire"</CODE>,
<CODE>"release"</CODE>,
<CODE>"get_value"</CODE>,
and int is the number of the semaphore.
Returns -2 for wrong command, -1 for error or the result of the command.
<DT><CODE>system("semic",</CODE> list, list <CODE>)</CODE>
<DD>or <CODE>system("semic",</CODE> list, list, int <CODE>)</CODE>
<A NAME="IDX240"></A>
computes from list of spectrum numbers and list of spectrum numbers
the semicontinuity index (qh, if 3rd argument is 1).
<DT><CODE>system("setenv",</CODE>string_expression, string_expression<CODE>)</CODE>
<DD><A NAME="IDX241"></A>
<A NAME="IDX242"></A>
sets the shell environment variable given as the second argument to the
value given as the third argument. Returns the third argument. Might not
be available on all platforms.
<DT><CODE>system("sh"</CODE>, string_expression <CODE>)</CODE>
<DD><A NAME="IDX243"></A>
<A NAME="IDX244"></A>
shell escape, returns the return code of the shell as int. The string is
sent literally to the shell.
<DT><CODE>system("shrinktest",</CODE> poly, i2 <CODE>)</CODE>
<DD><A NAME="IDX245"></A>
internal for shift algebra (with i2 variables): shrink the poly
<DT><CODE>system("Singular")</CODE>
<DD><A NAME="IDX246"></A>
<A NAME="IDX247"></A>
returns the absolute (path) name of the running S<SMALL>INGULAR</SMALL> as string.
<DT><CODE>system("SingularLib")</CODE>
<DD><A NAME="IDX248"></A>
<A NAME="IDX249"></A>
returns the colon seperated library search path name as string.
<DT><CODE>system("spadd",</CODE> list, list <CODE>)</CODE>
<DD>or <CODE>system("spadd",</CODE> list, list, int <CODE>)</CODE>
<A NAME="IDX250"></A>
computes from list of spectrum numbers and list of spectrum numbers
the sum of the lists.
<DT><CODE>system("spectrum",</CODE> poly <CODE>)</CODE>
<DD>or  <CODE>system("spectrum",</CODE> poly, int <CODE>)</CODE>
<A NAME="IDX251"></A>
<DT><CODE>system("spmul",</CODE> list, int <CODE>)</CODE>
<DD>or <CODE>system("spmul",</CODE> list, list, int <CODE>)</CODE>
<A NAME="IDX252"></A>
computes from list of spectrum numbers the multiple of it.
<DT><CODE>system("stest",</CODE> poly, i2, i3, i4 <CODE>)</CODE>
<DD><A NAME="IDX253"></A>
internal for shift algebra (with i4 variables): shift the poly by i2, up to degree i3
<DT><CODE>system("tensorModuleMult",</CODE> int, module <CODE>)</CODE>
<DD><A NAME="IDX254"></A>
internal for sheafcoh.lib (see id_TensorModuleMult)
<DT><CODE>system("twostd",</CODE> ideal <CODE>)</CODE>
<DD><A NAME="IDX255"></A>
<A NAME="IDX256"></A>
returns the two-sided standard basis of the two-sided ideal.
<DT><CODE>system("uname")</CODE>
<DD><A NAME="IDX257"></A>
<A NAME="IDX258"></A>
<A NAME="IDX259"></A>
returns a string identifying the architecture for which S<SMALL>INGULAR</SMALL>
was compiled.
<DT><CODE>system("version")</CODE>
<DD><A NAME="IDX260"></A>
<A NAME="IDX261"></A>
returns the version number of S<SMALL>INGULAR</SMALL> as int.
(Version a-b-c-d returns a*10000+b*1000+c*100+d)
<DT><CODE>system("with")</CODE>
<DD><A NAME="IDX262"></A>
without an argument:
returns a string describing the current version of S<SMALL>INGULAR</SMALL>,
its build options, the used path names and other configurations
<BR>with a string argument: test for that feature and return an int.
<DT><CODE>system("--cpus")</CODE>
<DD><A NAME="IDX263"></A>
<A NAME="IDX264"></A>
returns the number of available cpu cores as int (for using multiple cores).
(see <CODE>system("cpu")</CODE>).
<DT><CODE>system("</CODE>--<CODE>")</CODE>
<DD><A NAME="IDX265"></A>
<A NAME="IDX266"></A>
prints the values of all options.
<DT><CODE>system("</CODE>--long_option_name<CODE>")</CODE>
<DD><A NAME="IDX267"></A>
<A NAME="IDX268"></A>
returns the value of the (command-line) option long_option_name. The
type of the returned value is either string or int.
See  <A HREF="sing_19.htm#SEC26">Command line options</A>, for more info.
<DT><CODE>system("</CODE>--long_option_name<CODE>",</CODE> expression<CODE>)</CODE>
<DD><A NAME="IDX269"></A>
<A NAME="IDX270"></A>
<A NAME="IDX271"></A>
<A NAME="IDX272"></A>
sets the value of the (command-line) option long_option_name to the
value given by the expression. Type of the expression must be string, or
int. See  <A HREF="sing_19.htm#SEC26">Command line options</A>, for more info. Among others,
this can be used for setting the seed of the random number generator,
the used help browser, the minimal display time, or the timer
resolution.
</DL>
<DT><CODE><STRONG>Example:</STRONG></CODE>
<DD><TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>// a listing of the current directory:
system("sh","ls");
// execute a shell, return to SINGULAR with exit:
system("sh","sh");
string unique_name="/tmp/xx"+string(system("pid"));
unique_name;
==> /tmp/xx4711
system("uname")
==> ix86-Linux
system("getenv","PATH");
==> /bin:/usr/bin:/usr/local/bin
system("Singular");
==> /usr/local/bin/Singular
// report value of all options
system("--");
==> // --batch           0
==> // --execute        
==> // --sdb             0
==> // --echo            1
==> // --quiet           1
==> // --sort            0
==> // --random          12345678
==> // --no-tty          1
==> // --user-option    
==> // --allow-net       0
==> // --browser        
==> // --cntrlc         
==> // --emacs           0
==> // --no-stdlib       0
==> // --no-rc           1
==> // --no-warn         0
==> // --no-out          0
==> // --no-shell        0
==> // --min-time        "0.5"
==> // --cpus            2
==> // --MPport         
==> // --MPhost         
==> // --link           
==> // --ticks-per-sec   1
// set minimal display time to 0.02 seconds
system("--min-time", "0.02");
// set timer resolution to 0.01 seconds
system("--ticks-per-sec", 100);
// re-seed random number generator
system("--random", 12345678);
// allow your web browser to access HTML pages from the net
system("--allow-net", 1);
// and set help browser to firefox
system("--browser", "firefox");
==> // ** Could not get 'DataDir'.
==> // ** Either set environment variable 'SINGULAR_DATA_DIR' to 'DataDir',
==> // ** or make sure that 'DataDir' is at "/s/cratch/hannes/billbo-sw/doc/.\
   ./Singular/../share/"
==> // ** Could not get 'IdxFile'.
==> // ** Either set environment variable 'SINGULAR_IDX_FILE' to 'IdxFile',
==> // ** Could not get 'DataDir'.
==> // ** Either set environment variable 'SINGULAR_DATA_DIR' to 'DataDir',
==> // ** or make sure that 'DataDir' is at "/s/cratch/hannes/billbo-sw/doc/.\
   ./Singular/../share/"
==> // ** or make sure that 'IdxFile' is at "%D/doc/singular.idx"
==> // ** resource `x` not found
==> // ** Setting help browser to 'dummy'.
</FONT></pre></td></tr></table></DL>
<A NAME="syz"></A>
</TD>
</TR>
</TABLE>
<HR SIZE=1>
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR><TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_405.htm#SEC444"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: subst" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_407.htm#SEC446"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: syz" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_258.htm#SEC297"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: Functions and system variables" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_425.htm#SEC464"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Control structures" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_259.htm#SEC298"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: Functions" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR></TABLE>
<FONT SIZE="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <A HREF="http://www.singular.uni-kl.de/"><I>Singular</I></A> version 4-0-2, 2015,
generated by <I>texi2html</I>.
</FONT>

</BODY>
</HTML>
