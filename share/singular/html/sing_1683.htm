<HTML>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- Created on March, 4  2015 by texi2html 1.65 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Olaf Bachmann <obachman@mathematik.uni-kl.de>
Send bugs and suggestions to <texi2html@mathematik.uni-kl.de>

-->
<HEAD>
<TITLE>Singular Manual: solve</TITLE>

<META NAME="description" CONTENT="Singular Manual: solve">
<META NAME="keywords" CONTENT="Singular Manual: solve">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="texi2html 1.65">

</HEAD>

<BODY LANG="EN"  BACKGROUND="Mybg.gif">

<A NAME="SEC1758"></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR VALIGN="TOP">
<TD ALIGN="LEFT">
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1682.htm#SEC1757"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: laguerre_solve" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1684.htm#SEC1759"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: ures_solve" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1666.htm#SEC1741"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: presolve_lib" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1694.htm#SEC1769"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: triang_lib" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1681.htm#SEC1756"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: solve_lib" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR>
</TABLE>
</TD>
<TD ALIGN="LEFT">
<H4> D.8.3.2 solve </H4>
<!--docid::SEC1758::-->
Procedure from library <CODE>solve.lib</CODE> (see  <A HREF="sing_1681.htm#SEC1756">solve_lib</A>).
<P>

<DL COMPACT>
<DT><STRONG>Usage:</STRONG>
<DD>solve(G [, m, n [, l]] [,"oldring"] [,"nodisplay"] ); G = ideal,
m, n, l = integers (control parameters of the method), outR ring,<BR>
m: precision of output in digits ( 4 &lt;= m) and of the generated ring
of complex numbers;
<BR>n: control of multiplicity
<BR>n = 0, return all different roots
<BR>n != 0, find all roots (with multiplicity)
<BR>l: precision of internal computation in decimal digits ( l &gt;=8 )
only if the basering is not complex or complex with smaller
precision, <BR>
[default: (m,n,l) = (8,0,30), or if only (m,n) are set explicitly
with n!=0, then (m,n,l) = (m,n,60) ]
<P>

<DT><STRONG>Assume:</STRONG>
<DD>the ideal is 0-dimensional;<BR>
basering has characteristic 0 and is either complex or without
parameters;
<P>

<DT><STRONG>Return:</STRONG>
<DD>(1) If called without the additional parameter <CODE>"oldring"</CODE>: <BR>
ring <CODE>R</CODE> with the same number of variables but with complex
coefficients (and precision m). <CODE>R</CODE> comes with a list
<CODE>SOL</CODE> of numbers, in which complex roots of G are stored: <BR>
* If n = 0, <CODE>SOL</CODE> is the list of all different solutions, each
of them being represented by a list of numbers. <BR>
* If n != 0, <CODE>SOL</CODE> is a list of two list: SOL[i][1] is the list
of all different solutions with the multiplicity SOL[i][2].<BR>
SOL is ordered w.r.t. multiplicity (the smallest first). <BR>
(2) If called with the additional parameter <CODE>"oldring"</CODE>, the
procedure looks for an appropriate ring (at top level) in which
the solutions can be stored (interactive). <BR>
The user may then select an appropriate ring and choose a name for
the output list in this ring. The list is exported directly to the
selected ring and the return value is a string "result exported to"
+ name of the selected ring.
<P>

<DT><STRONG>Note:</STRONG>
<DD>If the problem is not 0-dim. the procedure stops with ERROR. If the
ideal G is not a lexicographic Groebner basis, the lexicographic
Groebner basis is computed internally (Hilbert driven). <BR>
The computed solutions are displayed, unless <CODE>solve</CODE> is called
with the additional parameter <CODE>"nodisplay"</CODE>.
<P>

</DL>
<STRONG>Example:</STRONG>
<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>LIB "solve.lib";
// Find all roots of a multivariate ideal using triangular sets:
int d,t,s = 4,3,2 ;
int i;
ring A=0,x(1..d),dp;
poly p=-1;
for (i=d; i&gt;0; i--) { p=p+x(i)^s; }
ideal I = x(d)^t-x(d)^s+p;
for (i=d-1; i&gt;0; i--) { I=x(i)^t-x(i)^s+p,I; }
I;
==> I[1]=x(1)^3+x(2)^2+x(3)^2+x(4)^2-1
==> I[2]=x(2)^3+x(1)^2+x(3)^2+x(4)^2-1
==> I[3]=x(3)^3+x(1)^2+x(2)^2+x(4)^2-1
==> I[4]=x(4)^3+x(1)^2+x(2)^2+x(3)^2-1
// the multiplicity is
vdim(std(I));
==> 81
def AC=solve(I,6,0,"nodisplay");  // solutions should not be displayed
==> 
==> // 'solve' created a ring, in which a list SOL of numbers (the complex so\
   lutions)
==> // is stored.
==> // To access the list of complex solutions, type (if the name R was assig\
   ned
==> // to the return value):
==>         setring R; SOL; 
// list of solutions is stored in AC as the list SOL (default name)
setring AC;
size(SOL);               // number of different solutions
==> 37
SOL[5];                  // the 5th solution
==> [1]:
==>    0.587401
==> [2]:
==>    -0.32748
==> [3]:
==>    0.587401
==> [4]:
==>    0.587401
// you must start with char. 0
setring A;
def AC1=solve(I,6,1,"nodisplay");
==> 
==> // 'solve' created a ring, in which a list SOL of numbers (the complex so\
   lutions)
==> // is stored.
==> // To access the list of complex solutions, type (if the name R was assig\
   ned
==> // to the return value):
==>         setring R; SOL; 
setring AC1;
size(SOL);               // number of different multiplicities
==> 2
SOL[1][1][1];            // a solution with
==> [1]:
==>    (0.766044+i*0.477895)
==> [2]:
==>    (0.766044+i*0.477895)
==> [3]:
==>    (0.766044-i*0.477895)
==> [4]:
==>    (0.766044-i*0.477895)
SOL[1][2];               // multiplicity 1
==> 1
SOL[2][1][1];            // a solution with
==> [1]:
==>    0
==> [2]:
==>    0
==> [3]:
==>    1
==> [4]:
==>    0
SOL[2][2];               // multiplicity 12
==> 12
// the number of different solutions is equal to
size(SOL[1][1])+size(SOL[2][1]);
==> 37
// the number of complex solutions (counted with multiplicities) is
size(SOL[1][1])*SOL[1][2]+size(SOL[2][1])*SOL[2][2];
==> 81
</FONT></pre></td></tr></table><P>

<A NAME="ures_solve"></A>
</TD>
</TR>
</TABLE>
<HR SIZE=1>
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR><TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1682.htm#SEC1757"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: laguerre_solve" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1684.htm#SEC1759"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: ures_solve" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1666.htm#SEC1741"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: presolve_lib" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1694.htm#SEC1769"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: triang_lib" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_1681.htm#SEC1756"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: solve_lib" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR></TABLE>
<FONT SIZE="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <A HREF="http://www.singular.uni-kl.de/"><I>Singular</I></A> version 4-0-2, 2015,
generated by <I>texi2html</I>.
</FONT>

</BODY>
</HTML>
