<HTML>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- Created on March, 4  2015 by texi2html 1.65 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Olaf Bachmann <obachman@mathematik.uni-kl.de>
Send bugs and suggestions to <texi2html@mathematik.uni-kl.de>

-->
<HEAD>
<TITLE>Singular Manual: countedref</TITLE>

<META NAME="description" CONTENT="Singular Manual: countedref">
<META NAME="keywords" CONTENT="Singular Manual: countedref">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="texi2html 1.65">

</HEAD>

<BODY LANG="EN"  BACKGROUND="Mybg.gif">

<A NAME="SEC290"></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR VALIGN="TOP">
<TD ALIGN="LEFT">
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_250.htm#SEC289"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: python_run" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_252.htm#SEC291"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: reference declarations" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_243.htm#SEC282"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: pyobject" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_258.htm#SEC297"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Functions and system variables" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_72.htm#SEC111"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: Data types" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR>
</TABLE>
</TD>
<TD ALIGN="LEFT">
<H2> 4.26 reference and shared (experimental) </H2>
<!--docid::SEC290::-->
<P>

The black box data types <CODE>reference</CODE> and <CODE>shared</CODE> in S<SMALL>INGULAR</SMALL>
allow for concurrently accessing  S<SMALL>INGULAR</SMALL> object data.
Copying such object will only add an additional handle which allows you
to define multiple identifers for the same object instance.
</P><P>

Both experimental features are hidden by default, please activate them by
typing <CODE>system("reference");</CODE> or <CODE>system("shared");</CODE>, respectively,
at the S<SMALL>INGULAR</SMALL> prompt.
</P><P>

You must initialize a <CODE>reference</CODE> using a named identifier
or a subexpression of the latter. The resulting object can be stored to gain
read and write access from sophisticated data structures.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>system("reference"); system("shared");
int i = 17;
reference ref = i;

ref;
==> 17
==> 
ref = 19;
ref;
==> 19
==> 
i;             // original handle changed!
==> 19

kill ref;
i;             // 'i' stays alive
==> 19

reference uninitialized;
uninitialized;   // not initialized
==> &lt;unassigned reference or shared memory&gt;
// error: not a named identifier:
uninitialized = 17;
==>    ? Can only take reference from identifier
==>    ? error occurred in or before ./examples/reference_and_shared__experim\
   ental_.sing line 16: `uninitialized = 17;`

// but subexpressions of named identifiers will do
list ll = list(3,4,5);
reference ref = ll[2];
ref;
==> 4
==> 
ref = 12;
ref;
==> 12
==> 
ll;
==> [1]:
==>    3
==> [2]:
==>    12
==> [3]:
==>    5
</FONT></pre></td></tr></table></P><P>

In contrast, the type <CODE>shared</CODE> can be used to
avoid the initial identifier definition. Each copy has equal rights
for manipulating the data.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>system("reference"); system("shared");
shared ll= list(2,3);

ll[1];
==> 2
==> 
ll[1]= 17;
ll;
==> [1]:
==>    17
==> [2]:
==>    3
==> 
</FONT></pre></td></tr></table></P><P>

In most cases the value look-up is done automatically, but sometimes
you have to disambiguate the input.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>system("reference"); system("shared");
int i = 0;
reference ref = i;
shared sh = 12;

ref + sh;    // automated 'dereferencing'
==> 12
ref + 4;
==> 4
4 + sh;
==> 16

list ll = list(ref, ref, ref, ref, ref, ref, ref);
string(ll);
==> 0,0,0,0,0,0,0
ref = 1;
string(ll);   // all one now
==> 1,1,1,1,1,1,1

ll[3] = 0;
string(ll);   // only third element changed
==> 1,1,0,1,1,1,1

reference(ll[1]) = 9;
string(ll);   // all others changed
==> 9,9,0,9,9,9,9

def(ll[1]) = 11;  // alternative (generic) syntax
string(ll);
==> 11,11,0,11,11,11,11
</FONT></pre></td></tr></table></P><P>

The previous example had shown that <CODE>reference</CODE> and <CODE>shared</CODE>
objects can store highly structured without duplicating data
all over again.
As an additional feature, you can use <CODE>reference</CODE> objects for
implementing procedures having side-effects.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>system("reference"); system("shared");
list changeme;
changeme;
==> empty list

proc setfirst(reference ll, def arg) {  ll[1] = arg; }

setfirst(changeme, 17);
changeme;
==> [1]:
==>    17
</FONT></pre></td></tr></table></P><P>

If you do not need write-access to <CODE>proc</CODE> parameters, your code
will usually perform better using the <CODE>alias</CODE> statement in the
parameter list, see  <A HREF="sing_152.htm#SEC191">proc</A>.
</P><P>

<BLOCKQUOTE><TABLE BORDER=0 CELLSPACING=0> 
<TR><TD ALIGN="left" VALIGN="TOP"><A HREF="sing_252.htm#SEC291">4.26.1 reference declarations</A></TD><TD>&nbsp;&nbsp;</TD><TD ALIGN="left" VALIGN="TOP"></TD></TR>
<TR><TD ALIGN="left" VALIGN="TOP"><A HREF="sing_253.htm#SEC292">4.26.2 reference expressions</A></TD><TD>&nbsp;&nbsp;</TD><TD ALIGN="left" VALIGN="TOP"></TD></TR>
<TR><TD ALIGN="left" VALIGN="TOP"><A HREF="sing_254.htm#SEC293">4.26.3 shared declarations</A></TD><TD>&nbsp;&nbsp;</TD><TD ALIGN="left" VALIGN="TOP"></TD></TR>
<TR><TD ALIGN="left" VALIGN="TOP"><A HREF="sing_255.htm#SEC294">4.26.4 shared expressions</A></TD><TD>&nbsp;&nbsp;</TD><TD ALIGN="left" VALIGN="TOP"></TD></TR>
<TR><TD ALIGN="left" VALIGN="TOP"><A HREF="sing_256.htm#SEC295">4.26.5 reference and shared operations</A></TD><TD>&nbsp;&nbsp;</TD><TD ALIGN="left" VALIGN="TOP"></TD></TR>
<TR><TD ALIGN="left" VALIGN="TOP"><A HREF="sing_257.htm#SEC296">4.26.6 reference and shared related functions</A></TD><TD>&nbsp;&nbsp;</TD><TD ALIGN="left" VALIGN="TOP"></TD></TR>
</TABLE></BLOCKQUOTE>
<P>

<A NAME="reference declarations"></A>
</TD>
</TR>
</TABLE>
<HR SIZE=1>
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR><TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_250.htm#SEC289"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: python_run" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_252.htm#SEC291"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: reference declarations" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_243.htm#SEC282"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: pyobject" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_258.htm#SEC297"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Functions and system variables" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_72.htm#SEC111"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: Data types" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR></TABLE>
<FONT SIZE="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <A HREF="http://www.singular.uni-kl.de/"><I>Singular</I></A> version 4-0-2, 2015,
generated by <I>texi2html</I>.
</FONT>

</BODY>
</HTML>
