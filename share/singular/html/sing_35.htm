<HTML>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- Created on March, 4  2015 by texi2html 1.65 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Olaf Bachmann <obachman@mathematik.uni-kl.de>
Send bugs and suggestions to <texi2html@mathematik.uni-kl.de>

-->
<HEAD>
<TITLE>Singular Manual: General command syntax</TITLE>

<META NAME="description" CONTENT="Singular Manual: General command syntax">
<META NAME="keywords" CONTENT="Singular Manual: General command syntax">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="texi2html 1.65">

</HEAD>

<BODY LANG="EN"  BACKGROUND="Mybg.gif">

<A NAME="SEC58"></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR VALIGN="TOP">
<TD ALIGN="LEFT">
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_34.htm#SEC55"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: The SINGULAR language" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_36.htm#SEC63"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: Special characters" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_33.htm#SEC46"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: Implemented algorithms" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_41.htm#SEC70"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Input and output" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_34.htm#SEC55"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: The SINGULAR language" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR>
</TABLE>
</TD>
<TD ALIGN="LEFT">
<H3> 3.5.1 General command syntax </H3>
<!--docid::SEC58::-->
<P>

In S<SMALL>INGULAR</SMALL> a command is either a declaration, an assignment, a
call to a function without return value, or a print command. The general
form of a command is described in the following subsections.
</P><P>

<A NAME="SEC59"></A>
<H4> Declaration </H4>
<!--docid::SEC59::-->
<OL>
<LI>type name <CODE>=</CODE> expression <CODE>;</CODE>
<BR> declares a variable with the given name of the given type and assigns
the expression as initial value to it.  Expression is an expression of
the specified type or one that can be converted to that type.
See  <A HREF="sing_39.htm#SEC66">Type conversion and casting</A>.
<P>

<LI>type name_list <CODE>=</CODE> expression_list <CODE>;</CODE>
<BR> declares variables with the given names and assigns successively each
expression of expression_list to the corresponding name of
name_list.  Both lists must be of the same length.  Each expression in
expression_list is an expression of the specified type or one that can
be converted to that type.  See  <A HREF="sing_39.htm#SEC66">Type conversion and casting</A>.
<P>

<LI>type name <CODE>;</CODE>
<BR> declares a variable with the given name of the given type and assigns
the default value of the specific type to it.
</OL>
<P>

See  <A HREF="sing_37.htm#SEC64">Names</A>, for more information on declarations.  See  <A HREF="sing_72.htm#SEC111">Data types</A>,
for a description of all data types known to S<SMALL>INGULAR</SMALL>.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>ring r;                   // the default ring
poly f,g = x^2+y^3,xy+z2; // the polynomials f=x^2+y^3 and g=x*y+z^2
ideal I = f,g;            // the ideal generated by f and g
matrix m[3][3];           // a 3 x 3 zero matrix
int i=2;                  // the integer i=2
</FONT></pre></td></tr></table></P><P>

<A NAME="SEC60"></A>
<H4> Assignment </H4>
<!--docid::SEC60::-->
<OL>
<LI>
name <CODE>=</CODE> expression <CODE>;</CODE>
<BR> assigns expression to name.
<P>

<LI>
name_list <CODE>=</CODE> expression_list <CODE>;</CODE>
<BR> assigns successively each expression of expression_list to the
corresponding name of name_list. Both lists must be of the same
length.  This is not a simultaneous assignment.  Thus, <CODE>f, g = g, f;</CODE> does
not swap the values of <CODE>f</CODE> and <CODE>g</CODE>, but rather assigns
<CODE>g</CODE> to both <CODE>f</CODE> and <CODE>g</CODE>.
</OL>
<P>

A type conversion of the type of expression to the type of
name must be possible. See  <A HREF="sing_39.htm#SEC66">Type conversion and casting</A>.
</P><P>

An assignment itself does not yield a value. Hence, compound assignments
like <CODE>i = j = k;</CODE> are not allowed and result in an error.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>f = x^2 + y^2 ;      // overrides the old value of f
I = jacob(f);
f,g = I[1],x^2+y^2 ; // overrides the old values of f and g
</FONT></pre></td></tr></table></P><P>

<A NAME="SEC61"></A>
<H4> Function without return value </H4>
<!--docid::SEC61::-->
<OL>
<LI>
function_name [ <CODE>(</CODE> argument_list <CODE>)</CODE> ] <CODE>;</CODE>
<BR> calls function function_name with arguments argument_list.
</OL>
<P>

The function may have output (not to be confused with a return value of
type string). See  <A HREF="sing_259.htm#SEC298">Functions</A>. Functions without a return value are
specified there to have a return type 'none'.
</P><P>

Some of these functions have to be called without parentheses, e.g.,
<CODE>help</CODE>, <CODE>LIB</CODE>.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>  ring r;
  ideal i=x2+y2,x;
  i=std(i);
  degree(i);        // degree has no return value but prints output
==> // dimension (proj.)  = 0
==> // degree (proj.)   = 2
</FONT></pre></td></tr></table></P><P>

<A NAME="SEC62"></A>
<H4> Print command </H4>
<!--docid::SEC62::-->
<OL>
<LI>
expression <CODE>;</CODE>
<BR> prints the value of an expression, for example, of a variable.
</OL>
<P>

Use the function <CODE>print</CODE> (or the procedure <CODE>show</CODE> from inout.lib)
to get a pretty output of various data
types, e.g., matrix or intmat. See  <A HREF="sing_373.htm#SEC412">print</A>.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>  int i=2;
  i;
==> 2
  intmat m[2][2]=1,7,10,0;
  print(m);
==>      1     7
==>     10     0
</FONT></pre></td></tr></table></P><P>

<A NAME="Special characters"></A>
</TD>
</TR>
</TABLE>
<HR SIZE=1>
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR><TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_34.htm#SEC55"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: The SINGULAR language" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_36.htm#SEC63"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: Special characters" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_33.htm#SEC46"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: Implemented algorithms" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_41.htm#SEC70"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Input and output" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_34.htm#SEC55"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: The SINGULAR language" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR></TABLE>
<FONT SIZE="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <A HREF="http://www.singular.uni-kl.de/"><I>Singular</I></A> version 4-0-2, 2015,
generated by <I>texi2html</I>.
</FONT>

</BODY>
</HTML>
