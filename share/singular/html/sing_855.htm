<HTML>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- Created on March, 4  2015 by texi2html 1.65 -->
<!--
Written by: Lionel Cons <Lionel.Cons@cern.ch> (original author)
            Karl Berry  <karl@freefriends.org>
            Olaf Bachmann <obachman@mathematik.uni-kl.de>
            and many others.
Maintained by: Olaf Bachmann <obachman@mathematik.uni-kl.de>
Send bugs and suggestions to <texi2html@mathematik.uni-kl.de>

-->
<HEAD>
<TITLE>Singular Manual: Groebner basis conversion</TITLE>

<META NAME="description" CONTENT="Singular Manual: Groebner basis conversion">
<META NAME="keywords" CONTENT="Singular Manual: Groebner basis conversion">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="texi2html 1.65">

</HEAD>

<BODY LANG="EN"  BACKGROUND="Mybg.gif">

<A NAME="SEC906"></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR VALIGN="TOP">
<TD ALIGN="LEFT">
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_854.htm#SEC905"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: groebner and std" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_856.htm#SEC907"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: slim Groebner bases" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_843.htm#SEC894"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: Programming" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_857.htm#SEC908"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Commutative Algebra" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_853.htm#SEC904"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: Computing Groebner and Standard Bases" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
</TR>
<TR VALIGN="TOP" ALIGN="LEFT">
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR>
</TABLE>
</TD>
<TD ALIGN="LEFT">
<H3> A.2.2 Groebner basis conversion </H3>
<!--docid::SEC906::-->
<P>

The performance of Buchberger's algorithm is
sensitive to the chosen monomial order. A Groebner basis
computation with respect to a less favorable order such as
the lexicographic ordering may easily run out of time or memory even
in cases where a Groebner basis computation with respect to a more efficient
order such as the degree reverse lexicographic ordering is very well
feasible.  Groebner basis conversion algorithms and the Hilbert-driven
Buchberger algorithm are based on this observation:
</P><P>

<UL>
<LI>
Groebner basis conversion: Given an ideal 
<!-- MATH
 $I\subset K[x_1,\dots,x_n]$
 -->
<IMG
 WIDTH="127" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="sing_336.png"
 ALT="$I\subset K[x_1,\dots,x_n]$"> and a
slow monomial order, compute a Groebner basis with respect to an
appropriately chosen fast order. Then convert the result to a Groebner
basis with respect to the given slow order.
<P>

<LI>
Hilbert-driven Buchberger algorithm: Homogenize the given
generators for 
<IMG
 WIDTH="13" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="sing_248.png"
 ALT="$I$"> with respect to a new variable, say, 
<IMG
 WIDTH="21" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="sing_337.png"
 ALT="$x_0$">.
Extend the given slow ordering on 
<!-- MATH
 $K[x_1,\dots,x_n]$
 -->
<IMG
 WIDTH="97" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="sing_338.png"
 ALT="$K[x_1,\dots,x_n]$"> to a global
product ordering on 
<!-- MATH
 $K[x_0,\dots,x_n]$
 -->
<IMG
 WIDTH="97" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="sing_339.png"
 ALT="$K[x_0,\dots,x_n]$">.
Compute a Groebner basis for the ideal generated by the homogenized
polynomials with respect to a fast ordering. Read the Hilbert function, and
use this information when computing a Groebner basis with
respect to the extended (slow) ordering. Finally,
dehomogenize the elements of the resulting Groebner basis.
</UL>
<P>

S<SMALL>INGULAR</SMALL> provides implementations for the FGLM conversion algorithm
(which applies to zero-dimensional ideals only, see  <A HREF="sing_403.htm#SEC442">stdfglm</A>) and
variants of the Groebner walk conversion algorithm (which works for
arbitrary ideals, See  <A HREF="sing_303.htm#SEC342">frwalk</A>,  <A HREF="sing_1141.htm#SEC1216">grwalk_lib</A>).
An implementation of the Hilbert-driven Buchberger
algorithm is accessible via the <CODE>stdhilb</CODE> command (see also  <A HREF="sing_402.htm#SEC441">std</A>).
</P><P>

For the ideal below, <CODE>stdfglm</CODE> is more than 100 times
and <CODE>stdhilb</CODE> about 10 times faster than <CODE>std</CODE>.
</P><P>

<TABLE><tr><td>&nbsp;</td><td class=smallexample><FONT SIZE=-1><pre>  ring r =32003,(a,b,c,d,e),lp;
  ideal i=a+b+c+d, ab+bc+cd+ae+de, abc+bcd+abe+ade+cde,
          abc+abce+abde+acde+bcde, abcde-1;
  int t=timer;
  option(prot);
  ideal j1=stdfglm(i);
==> std in (32003),(a,b,c,d,e),(dp(5),C)
==> [63:2]1(4)s2(3)s3(2)s4s(3)s5s(4)s(5)s(6)6-ss(7)s(9)s(11)-7-ss(13)s(15)s(1\
   7)--s--8-s(16)s(18)s(20)s(23)s(26)-s(23)-------9--s(16)s10(19)s(22)s(25)-\
   ---s(24)--s11---------s12(17)s(19)s(21)------s(17)s(19)s(21)s13(23)s--s--\
   ---s(20)----------14-s(12)--------15-s(6)--16-s(5)--17---
==> (S:21)---------------------
==> product criterion:109 chain criterion:322
==> .....+....-...-..-+-....-...-..---...-++---++---....-...-++---.++-----------...------....-...------+--------+---.++------++++-+++----------------+---
==> vdim= 45
==> .............................................++--------------------------------------------+--------------------------------------------+--------------------------------------------+--------------------------------------------
  timer-t;
==> 0
  size(j1);   // size (no. of polys) in computed GB
==> 5
  t=timer;
  ideal j2=stdhilb(i);
==> compute hilbert series with std in ring (32003),(a,b,c,d,e,@),(dp(6),C)
==> weights used for hilbert series: 1,1,1,1,1,1
==> [31:1]1(4)s2(3)s3(2)s4ss5(3)s(4)s(5)-s6s(6)s(7)s(9)s(11)-7-ss(13)s(15)s(1\
   7)--s--8-s(16)s(18)s(20)s(23)s(26)-s(29)-------9-s(25)s(28)--s(29)---s---\
   ----10-s(24)-------s(19)---11-s(17)s(19)s(21)-----s(18)-s(19)s12(21)s(23)\
   s(26)-s(27)------s(23)----------13-s(15)-----------14-s(6)--15-s(5)--16--\
   -
==> product criterion:88 chain criterion:650
==> std with hilb in (32003),(a,b,c,d,e,@),(lp(5),dp(1),C)
==> [31:1]1(41)s2(40)s3(39)s4s(40)-s5(41)s(44)s(46)s-s-sh6s(49)s(51)s(54)s(55\
   )s(56)s(58)s(59)--shhhhhhh7(53)s(55)s(57)s(59)s(61)-s(62)s(68)s(70)s(71)s\
   (74)--shhhhhhhhhhhhhhhh8(58)s(61)s(65)s(68)s(71)-s(72)s(75)--------shhhhh\
   hhhhhhhhhhhhhh9(51)s(53)s(56)s(58)s(61)s(64)------s(61)s(64)shhhhhhhhhhhh\
   hhh10(53)s(55)s(58)s(62)s(64)s(67)s(70)--s(71)------s(68)s(71)s(73)--shhh\
   hhhhhhhhhhhhh11(58)s(60)s(63)s(66)s(69)s(72)s(74)---s-s(76)s(79)----s(78)\
   -------shhhhhhhhhhhhhhhhhhhhhhh12(51)s(54)s(57)s(58)s(60)s(63)s(65)s(68)s\
   (70)s(73)s(76)s(79)--s(80)----shhhhhhhhhhhhhhhhhhhhhhhhhhhhhh13(48)s(51)s\
   (54)s(57)s(59)s(61)s(64)s(67)shhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh14(3\
   1)s(33)s(36)s(39)s(42)s(45)shhhhhhhhhhhhhhhhhhhhhhhhh15(23)s(26)s(29)s(32\
   )s(35)shhhhhhhhhhhhhhhhhhh16(18)s(21)s(24)s(27)shhhhhhhhhhhhhhh17(15)s(18\
   )s(21)s(24)shhhhhhhhhhhh18(15)s(18)s(21)s(24)shhhhhhhhhhhh19(14)s(17)s(20\
   )shhhhhhhhhhhh20(11)s(14)s(17)shhhhhhhhh21(11)s(14)s(17)shhhhhhhhh22(11)s\
   (14)s(16)shhhhhhhhh23(10)s(13)shhhhhhhhh24(7)s(10)shhhhhh25(7)s(10)shhhhh\
   h26(7)s(10)shhhhhh27(7)s(10)shhhhhh28(7)s(10)shhhhhh29(7)s(10)shhhhhh30(7\
   )s(9)shhhhhh31(6)shhhhhh[1023:2]32(3)shhh33shhh34shhh35shhh36shhh37shhh38\
   shhh39shhh40shhh41shhh42shhh43shhh44shhh45shhh46shhh47shhh48shhh49shhh50s\
   hhh51shhh52shhh53shhh54shhhhhh
==> product criterion:491 chain criterion:11799
==> hilbert series criterion:417
==> dehomogenization
==> simplification
==> imap to ring (32003),(a,b,c,d,e),(lp(5),C)
  timer-t;
==> 0
  size(j2);   // size (no. of polys) in computed GB
==> 5
  // usual Groebner basis computation for lex ordering
  t=timer;
  ideal j0 =std(i);
==> [63:1]1(4)s2(3)s3(2)s4s(3)s5(5)s(4)s6(6)s(7)s(9)s(8)sss7(10)s(11)s(10)s(1\
   1)s(13)s8(12)s(13)s(15)s.s(14).s.9.s(16)s(17)s(19)........10.s(20).s(21)s\
   s..11.s(23)s(25).ss(27)...s(28)s(26)...12.s(25)sss(23)sss.......s(22)...1\
   3.s(23)ssssssss(21)s(22)sssss(21)ss..14.ss(22)s.s.sssss(21)s(22)sss.s...1\
   5.ssss(21)s(22)ssssssssss(21)s(22)sss16.ssssssss(21)s(22)sssssssssss17ss(\
   21)s(22)ssssssssss(21)sss(22)ss(21)ss18(22)s(21)s(22)s.s..............19.\
   sssss(21)ss(22)ssssssssss(21)s(22)s20.ssssssssss(21)s........21.s(22)ssss\
   sssssssssss(21)s(22)ssss22ssssssssssss(21)s(22)sssssss23sssssssssss(21)s(\
   22)ssssssss24ssssssssssss(21)s(22)sssssss25ssssssssss(21)s(22)sssssssss26\
   ssssssssss(21)s(20)ssssssss27.sssssssss..........s28.ssssss.............2\
   9.sssssssssssssssssss30sssssssssssssssssss31.sssssssssssssssssss32.ssssss\
   ssssssssssssss33ssssssssssssssssssss34ssssssssssssssssssss35sssssssssssss\
   sssssss36ssssssssssssssssssss37ssssssssssssssssssss38ssssssssssssssssssss\
   39ssssssssssssssssssss40ssssssssssssssssssss41ssss---------------42-s(4)-\
   -43-s44s45s46s47s48s49s50s51s52s53s54s55s56s
==> product criterion:1395 chain criterion:904
  option(noprot);
  timer-t;
==> 0
</FONT></pre></td></tr></table></P><P>

<A NAME="slim Groebner bases"></A>
</TD>
</TR>
</TABLE>
<HR SIZE=1>
<TABLE CELLPADDING=1 CELLSPACING=1 BORDER=0>
<TR><TD VALIGN="MIDDLE" ALIGN="LEFT">  <a href="index.htm"><img
    src="singular-icon-transparent.gif" width="50"
      border="0" ALT="Top"></a>
</TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_854.htm#SEC905"><IMG SRC="a_left.gif" BORDER="0" ALT="Back: groebner and std" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_856.htm#SEC907"><IMG SRC="a_right.gif" BORDER="0" ALT="Forward: slim Groebner bases" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_843.htm#SEC894"><IMG SRC="a_leftdouble.gif" BORDER="0" ALT="FastBack: Programming" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_857.htm#SEC908"><IMG SRC="a_rightdouble.gif" BORDER="0" ALT="FastForward: Commutative Algebra" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_853.htm#SEC904"><IMG SRC="a_up.gif" BORDER="0" ALT="Up: Computing Groebner and Standard Bases" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="index.htm#SEC_Top"><IMG SRC="a_top.gif" BORDER="0" ALT="Top: Singular Manual" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_toc.htm#SEC_Contents"><IMG SRC="a_tableofcon.gif" BORDER="0" ALT="Contents: Table of Contents" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_2336.htm#SEC2422"><IMG SRC="a_index.gif" BORDER="0" ALT="Index: Index" ALIGN="MIDDLE"></A></TD>
<TD VALIGN="MIDDLE" ALIGN="LEFT"><A HREF="sing_abt.htm#SEC_About"><IMG SRC="a_help.gif" BORDER="0" ALT="About: About this document" ALIGN="MIDDLE"></A></TD>
</TR></TABLE>
<FONT SIZE="-1">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User manual for <A HREF="http://www.singular.uni-kl.de/"><I>Singular</I></A> version 4-0-2, 2015,
generated by <I>texi2html</I>.
</FONT>

</BODY>
</HTML>
